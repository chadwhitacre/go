Building Go cmd/dist using /usr/local/Cellar/go/1.10.1/libexec.
Building Go toolchain1 using /usr/local/Cellar/go/1.10.1/libexec.
Building Go bootstrap cmd/go (go_bootstrap) using Go toolchain1.
----------------------------------------------------
file: src/runtime/internal/sys/arch.go
lout: 
----------------------------------------------------
file: src/runtime/internal/atomic/atomic_amd64x.go
lout: 
----------------------------------------------------
file: src/runtime/internal/math/math.go
lout: 
----------------------------------------------------
file: src/internal/cpu/cpu.go
lout: 
----------------------------------------------------
file: src/internal/bytealg/bytealg.go
lout: 
----------------------------------------------------
file: src/runtime/alg.go
lout: inf (= CALLFUNC), uint16Type (= DOTPTR), uint32Type (= DOTPTR), uint64Type (= DOTPTR), stringType (= DOTPTR), sliceType (= DOTPTR), chansendpc (= CALLFUNC), chanrecvpc (= CALLFUNC)
----------------------------------------------------
file: src/internal/race/doc.go
lout: 
----------------------------------------------------
file: src/errors/errors.go
lout: 
----------------------------------------------------
file: src/unicode/utf8/utf8.go
lout: 
----------------------------------------------------
file: src/sync/atomic/doc.go
lout: 
----------------------------------------------------
file: src/encoding/encoding.go
lout: 
----------------------------------------------------
file: src/cmd/go/internal/semver/semver.go
lout: 
----------------------------------------------------
file: src/unicode/utf16/utf16.go
lout: 
----------------------------------------------------
file: src/math/bits/bits.go
lout: 
----------------------------------------------------
file: src/internal/testlog/log.go
lout: 
----------------------------------------------------
file: src/sync/cond.go
lout: expunged (= CONVNOP)
----------------------------------------------------
file: src/internal/singleflight/singleflight.go
lout: 
----------------------------------------------------
file: src/io/io.go
lout: ErrShortWrite (= CALLFUNC), ErrShortBuffer (= CALLFUNC), EOF (= CALLFUNC), ErrUnexpectedEOF (= CALLFUNC), ErrNoProgress (= CALLFUNC), errWhence (= CALLFUNC), errOffset (= CALLFUNC), ErrClosedPipe (= CALLFUNC)
----------------------------------------------------
file: src/unicode/casetables.go
lout: Categories (= MAPLIT), Scripts (= MAPLIT), Properties (= MAPLIT), FoldCategory (= MAPLIT), FoldScript (= MAPLIT)
----------------------------------------------------
file: src/cmd/go/internal/web/bootstrap.go
lout: errHTTP (= CALLFUNC)
----------------------------------------------------
file: src/hash/hash.go
lout: 
----------------------------------------------------
file: src/math/abs.go
lout: useFMA (= &&)
----------------------------------------------------
file: src/hash/adler32/adler32.go
lout: 
----------------------------------------------------
file: src/bytes/buffer.go
lout: ErrTooLarge (= CALLFUNC), errNegativeRead (= CALLFUNC)
----------------------------------------------------
file: src/strings/builder.go
lout: 
----------------------------------------------------
file: src/hash/crc32/crc32.go
lout: IEEETable (= CALLFUNC)
----------------------------------------------------
file: src/path/match.go
lout: ErrBadPattern (= CALLFUNC)
----------------------------------------------------
file: src/math/rand/exp.go
lout: globalRand (= CALLFUNC)
----------------------------------------------------
file: src/bufio/bufio.go
lout: ErrInvalidUnreadByte (= CALLFUNC), ErrInvalidUnreadRune (= CALLFUNC), ErrBufferFull (= CALLFUNC), ErrNegativeCount (= CALLFUNC), errNegativeRead (= CALLFUNC), errNegativeWrite (= CALLFUNC), ErrTooLong (= CALLFUNC), ErrNegativeAdvance (= CALLFUNC), ErrAdvanceTooFar (= CALLFUNC), ErrFinalToken (= CALLFUNC)
----------------------------------------------------
file: src/cmd/go/internal/par/work.go
lout: 
----------------------------------------------------
file: src/syscall/bpf_darwin.go
lout: envs (= CALLFUNC), minRoutingSockaddrLen (= CALLFUNC), statictmp_47 (= MAKEMAP)
----------------------------------------------------
file: src/internal/syscall/unix/at_darwin.go
lout: 
----------------------------------------------------
file: src/strconv/atob.go
lout: ErrRange (= CALLFUNC), ErrSyntax (= CALLFUNC)
----------------------------------------------------
file: src/crypto/crypto.go
lout: hashes (= MAKESLICE)
----------------------------------------------------
file: src/crypto/sha1/sha1.go
lout: useAVX2 (= &&)
----------------------------------------------------
file: src/crypto/sha256/sha256.go
lout: useAVX2 (= &&)
----------------------------------------------------
file: src/time/format.go
lout: atoiError (= CALLFUNC), errBad (= CALLFUNC), errLeadingInt (= CALLFUNC), unitMap (= MAPLIT), startNano (= -), errLocation (= CALLFUNC), badData (= CALLFUNC), statictmp_21 (= +)
----------------------------------------------------
file: src/cmd/go/internal/modinfo/info.go
lout: 
----------------------------------------------------
file: src/internal/poll/fd.go
lout: ErrNetClosing (= CALLFUNC), ErrFileClosing (= CALLFUNC), ErrNoDeadline (= CALLFUNC)
----------------------------------------------------
file: src/os/dir.go
lout: ErrInvalid (= CALLFUNC), ErrPermission (= CALLFUNC), ErrExist (= CALLFUNC), ErrNotExist (= CALLFUNC), ErrClosed (= CALLFUNC), ErrNoDeadline (= NAME), errFinished (= CALLFUNC), nil n.Left on initCwd, initCwdErr = Getwd(), Stdin (= CALLFUNC), Stdout (= CALLFUNC), Stderr (= CALLFUNC)
----------------------------------------------------
file: src/os/signal/doc.go
lout: 
----------------------------------------------------
file: src/reflect/deepequal.go
lout: uint8Type (= DOTTYPE)
----------------------------------------------------
file: src/sort/search.go
lout: 
----------------------------------------------------
file: src/container/heap/heap.go
lout: 
----------------------------------------------------
file: src/encoding/binary/binary.go
lout: overflow (= CALLFUNC)
----------------------------------------------------
file: src/internal/fmtsort/sort.go
lout: 
----------------------------------------------------
file: src/cmd/internal/sys/arch.go
lout: statictmp_1 (= NAME), statictmp_3 (= NAME), statictmp_5 (= NAME), statictmp_7 (= NAME), statictmp_9 (= NAME), statictmp_11 (= NAME), statictmp_13 (= NAME), statictmp_15 (= NAME), statictmp_17 (= NAME), statictmp_19 (= NAME), statictmp_21 (= NAME), statictmp_23 (= NAME), statictmp_25 (= NAME)
----------------------------------------------------
file: src/path/filepath/match.go
lout: ErrBadPattern (= CALLFUNC), SkipDir (= CALLFUNC)
----------------------------------------------------
file: src/encoding/base64/base64.go
lout: StdEncoding (= CALLFUNC), URLEncoding (= CALLFUNC), RawStdEncoding (= CALLMETH), RawURLEncoding (= CALLMETH)
----------------------------------------------------
file: src/io/ioutil/ioutil.go
lout: 
----------------------------------------------------
file: src/regexp/syntax/compile.go
lout: perlGroup (= MAPLIT), posixGroup (= MAPLIT)
----------------------------------------------------
file: src/fmt/doc.go
lout: complexError (= CALLFUNC), boolError (= CALLFUNC)
----------------------------------------------------
file: src/log/log.go
lout: std (= CALLFUNC)
----------------------------------------------------
file: src/cmd/go/internal/module/module.go
lout: 
----------------------------------------------------
file: src/encoding/hex/hex.go
lout: ErrLength (= CALLFUNC)
----------------------------------------------------
file: src/net/url/url.go
lout: 
----------------------------------------------------
file: src/context/context.go
lout: Canceled (= CALLFUNC), background (= new), todo (= new), closedchan (= MAKECHAN)
----------------------------------------------------
file: src/flag/flag.go
lout: ErrHelp (= CALLFUNC), errParse (= CALLFUNC), errRange (= CALLFUNC), CommandLine (= CALLFUNC)
----------------------------------------------------
file: src/cmd/go/internal/str/path.go
lout: 
----------------------------------------------------
file: src/regexp/backtrack.go
lout: 
----------------------------------------------------
file: src/go/token/position.go
lout: 
----------------------------------------------------
file: src/compress/flate/deflate.go
lout: fixedLiteralEncoding (= CALLFUNC), fixedOffsetEncoding (= CALLFUNC)
----------------------------------------------------
file: src/text/template/parse/lex.go
lout: key (= MAPLIT)
----------------------------------------------------
file: src/debug/dwarf/attr_string.go
lout: _Attr_map (= MAPLIT), attrIsExprloc (= MAPLIT), attrPtrClass (= MAPLIT), knownOpcodeLengths (= MAPLIT), ErrUnknownPC (= CALLFUNC)
----------------------------------------------------
file: src/cmd/go/internal/cache/cache.go
lout: errMissing (= CALLFUNC), hashSalt (= STR2BYTES)
----------------------------------------------------
file: src/os/exec/exec.go
lout: ErrNotFound (= CALLFUNC)
----------------------------------------------------
file: src/cmd/internal/objabi/autotype.go
lout: GOROOT (= CALLFUNC), GOARCH (= CALLFUNC), GOOS (= CALLFUNC), GO386 (= CALLFUNC), GOARM (= CALLFUNC), GOMIPS (= CALLFUNC), GOMIPS64 (= CALLFUNC), defaultExpstring (= CALLFUNC)
----------------------------------------------------
file: src/encoding/json/decode.go
lout: textUnmarshalerType (= CALLINTER), numberType (= CALLFUNC), marshalerType (= CALLINTER), textMarshalerType (= CALLINTER), float32Encoder (= CALLPART), float64Encoder (= CALLPART)
----------------------------------------------------
file: src/go/scanner/errors.go
lout: 
----------------------------------------------------
file: src/compress/zlib/reader.go
lout: ErrChecksum (= CALLFUNC), ErrDictionary (= CALLFUNC), ErrHeader (= CALLFUNC)
----------------------------------------------------
file: src/encoding/xml/marshal.go
lout: marshalerType (= CALLINTER), marshalerAttrType (= CALLINTER), textMarshalerType (= CALLINTER), attrType (= CALLFUNC), unmarshalerType (= CALLINTER), unmarshalerAttrType (= CALLINTER), textUnmarshalerType (= CALLINTER), nameType (= CALLFUNC), errRawToken (= CALLFUNC), entity (= MAPLIT), htmlEntity (= MAPLIT), HTMLEntity (= NAME)
----------------------------------------------------
file: src/cmd/internal/xcoff/file.go
lout: 
----------------------------------------------------
file: src/cmd/go/internal/modfile/gopkgin.go
lout: GoVersionRE (= CALLFUNC)
----------------------------------------------------
file: src/internal/goroot/gc.go
lout: 
----------------------------------------------------
file: src/cmd/internal/test2json/test2json.go
lout: 
----------------------------------------------------
file: src/archive/zip/reader.go
lout: ErrFormat (= CALLFUNC), ErrAlgorithm (= CALLFUNC), ErrChecksum (= CALLFUNC), errLongName (= CALLFUNC), errLongExtra (= CALLFUNC)
----------------------------------------------------
file: src/debug/macho/fat.go
lout: 
----------------------------------------------------
file: src/cmd/go/internal/dirhash/hash.go
lout: 
----------------------------------------------------
file: src/text/template/doc.go
lout: maxExecDepth (= CALLFUNC), missingVal (= CALLFUNC), errorType (= CALLINTER), fmtStringerType (= CALLINTER), reflectValueType (= CALLINTER), errBadComparisonType (= CALLFUNC), errNoComparison (= CALLFUNC), errBadComparison (= CALLFUNC), builtins (= MAPLIT), builtinFuncs (= CALLFUNC)
----------------------------------------------------
file: src/debug/elf/elf.go
lout: ErrNoSymbols (= CALLFUNC)
----------------------------------------------------
file: src/go/ast/ast.go
lout: 
----------------------------------------------------
file: src/cmd/internal/buildid/buildid.go
lout: errBuildIDToolchain (= CALLFUNC), errBuildIDMalformed (= CALLFUNC), errBuildIDUnknown (= CALLFUNC)
----------------------------------------------------
file: src/go/doc/comment.go
lout: inTest (= &&), matchRx (= CALLFUNC), nonAlphaNumRx (= CALLFUNC), outputPrefix (= CALLFUNC), underscore (= CALLFUNC), noteMarkerRx (= CALLFUNC), noteCommentRx (= CALLFUNC), predeclaredTypes (= MAPLIT), predeclaredFuncs (= MAPLIT), predeclaredConstants (= MAPLIT)
----------------------------------------------------
file: src/go/parser/interface.go
lout: unresolved (= new), stmtStart (= MAPLIT), declStart (= MAPLIT), exprEnd (= MAPLIT)
----------------------------------------------------
file: src/go/build/build.go
lout: cgoEnabled (= MAPLIT), Default (= CALLFUNC), errNoModules (= CALLFUNC), knownOS (= MAKEMAP), knownArch (= MAKEMAP), ToolDir (= CALLFUNC), errSyntax (= CALLFUNC), errNUL (= CALLFUNC)
----------------------------------------------------
file: src/cmd/go/internal/cfg/cfg.go
lout: BuildContext (= CALLFUNC), BuildP (= CALLFUNC), Goarch (= DOT), Goos (= DOT), Gopath (= CALLFUNC), GOROOT (= CALLFUNC), GOBIN (= CALLFUNC), GOROOTbin (= CALLFUNC), GOROOTpkg (= CALLFUNC), GOROOTsrc (= CALLFUNC), GOROOT_FINAL (= CALLFUNC), GOARM (= CALLFUNC), GO386 (= NAME), GOMIPS (= NAME), GOMIPS64 (= NAME), OSArchSupportsCgo (= MAPLIT)
----------------------------------------------------
file: src/cmd/go/internal/imports/build.go
lout: KnownOS (= MAKEMAP), KnownArch (= MAKEMAP), errSyntax (= CALLFUNC), errNUL (= CALLFUNC), ErrNoGo (= CALLFUNC)
----------------------------------------------------
file: src/cmd/go/internal/base/base.go
lout: knownFlag (= MAKEMAP), Cwd (= CALLFUNC), Interrupted (= MAKECHAN), statictmp_1 (= NAME), ToolIsWindows (= ==), ToolDir (= NAME)
----------------------------------------------------
file: src/cmd/go/internal/tool/tool.go
lout: 
----------------------------------------------------
file: src/cmd/go/internal/help/help.go
lout: documentationTemplate (= +)
----------------------------------------------------
file: src/cmd/go/internal/version/version.go
lout: 
----------------------------------------------------
file: src/cmd/go/internal/doc/doc.go
lout: 
----------------------------------------------------
file: src/cmd/go/internal/search/search.go
lout: 
----------------------------------------------------
file: src/cmd/go/internal/cmdflag/flag.go
lout: 
----------------------------------------------------
file: src/cmd/go/internal/mvs/mvs.go
lout: 
----------------------------------------------------
file: src/cmd/go/internal/modfetch/codehost/codehost.go
lout: bashQuoter (= CALLFUNC), vcsCmds (= MAPLIT)
----------------------------------------------------
file: src/cmd/go/internal/load/flag.go
lout: packageCache (= MAPLIT), isDirCache (= MAPLIT), goModPathCache (= MAKEMAP), cgoExclude (= MAPLIT), cgoSyscallExclude (= MAPLIT), foldPath (= MAKEMAP), cmdCache (= MAPLIT), testFileSet (= CALLFUNC), testmainTmpl (= CALLFUNC)
----------------------------------------------------
file: src/cmd/go/internal/work/action.go
lout: runtimeVersion (= CALLFUNC), errPrintedOutput (= CALLFUNC), cgoLine (= CALLFUNC), cgoTypeSigRe (= CALLFUNC), origCC (= CALLFUNC), origCXX (= CALLFUNC), cgoRe (= CALLFUNC), statictmp_172 (= CALLFUNC), statictmp_172 (= CALLFUNC), statictmp_172 (= CALLFUNC), statictmp_172 (= CALLFUNC), statictmp_172 (= CALLFUNC), statictmp_172 (= CALLFUNC), statictmp_172 (= CALLFUNC), statictmp_172 (= CALLFUNC), statictmp_172 (= CALLFUNC), statictmp_172 (= CALLFUNC), statictmp_172 (= CALLFUNC), statictmp_172 (= CALLFUNC), statictmp_172 (= CALLFUNC), statictmp_172 (= CALLFUNC), statictmp_172 (= CALLFUNC), statictmp_172 (= CALLFUNC), statictmp_172 (= CALLFUNC), statictmp_172 (= CALLFUNC), statictmp_172 (= CALLFUNC), statictmp_172 (= CALLFUNC), statictmp_172 (= CALLFUNC), statictmp_172 (= CALLFUNC), statictmp_172 (= CALLFUNC), statictmp_172 (= CALLFUNC), statictmp_172 (= CALLFUNC), statictmp_172 (= CALLFUNC), statictmp_172 (= CALLFUNC), statictmp_172 (= CALLFUNC), statictmp_172 (= CALLFUNC), statictmp_172 (= CALLFUNC), statictmp_172 (= CALLFUNC), statictmp_172 (= CALLFUNC), statictmp_172 (= CALLFUNC), statictmp_172 (= CALLFUNC), statictmp_172 (= CALLFUNC), statictmp_172 (= CALLFUNC), statictmp_172 (= CALLFUNC), statictmp_172 (= CALLFUNC), statictmp_172 (= CALLFUNC), statictmp_172 (= CALLFUNC), statictmp_172 (= CALLFUNC), statictmp_172 (= CALLFUNC), statictmp_172 (= CALLFUNC), statictmp_172 (= CALLFUNC), statictmp_172 (= CALLFUNC), statictmp_172 (= CALLFUNC), statictmp_172 (= CALLFUNC), statictmp_172 (= CALLFUNC), statictmp_172 (= CALLFUNC), statictmp_172 (= CALLFUNC), statictmp_172 (= CALLFUNC), statictmp_172 (= CALLFUNC), statictmp_172 (= CALLFUNC), statictmp_172 (= CALLFUNC), statictmp_172 (= CALLFUNC), statictmp_172 (= CALLFUNC), statictmp_172 (= CALLFUNC), statictmp_172 (= CALLFUNC), statictmp_172 (= CALLFUNC), statictmp_172 (= CALLFUNC), statictmp_172 (= CALLFUNC), statictmp_172 (= CALLFUNC), statictmp_172 (= CALLFUNC), statictmp_172 (= CALLFUNC), statictmp_172 (= CALLFUNC), statictmp_172 (= CALLFUNC), statictmp_172 (= CALLFUNC), statictmp_172 (= CALLFUNC), statictmp_172 (= CALLFUNC), statictmp_172 (= CALLFUNC), statictmp_172 (= CALLFUNC), statictmp_172 (= CALLFUNC), statictmp_172 (= CALLFUNC), statictmp_172 (= CALLFUNC), statictmp_172 (= CALLFUNC), statictmp_172 (= CALLFUNC), statictmp_174 (= CALLFUNC), statictmp_174 (= CALLFUNC), statictmp_174 (= CALLFUNC), statictmp_174 (= CALLFUNC), statictmp_174 (= CALLFUNC), statictmp_174 (= CALLFUNC), statictmp_174 (= CALLFUNC), statictmp_174 (= CALLFUNC), statictmp_174 (= CALLFUNC), statictmp_174 (= CALLFUNC), statictmp_174 (= CALLFUNC), statictmp_174 (= CALLFUNC), statictmp_174 (= CALLFUNC), statictmp_174 (= CALLFUNC), statictmp_174 (= CALLFUNC), statictmp_174 (= CALLFUNC), statictmp_174 (= CALLFUNC), statictmp_174 (= CALLFUNC), statictmp_174 (= CALLFUNC), statictmp_174 (= CALLFUNC), statictmp_174 (= CALLFUNC), statictmp_174 (= CALLFUNC), statictmp_174 (= CALLFUNC), statictmp_174 (= CALLFUNC), statictmp_174 (= CALLFUNC), statictmp_174 (= CALLFUNC), statictmp_174 (= CALLFUNC), statictmp_174 (= CALLFUNC), statictmp_174 (= CALLFUNC), statictmp_174 (= CALLFUNC), statictmp_174 (= CALLFUNC), statictmp_174 (= CALLFUNC), statictmp_174 (= CALLFUNC), statictmp_174 (= CALLFUNC), statictmp_174 (= CALLFUNC), statictmp_174 (= CALLFUNC), statictmp_174 (= CALLFUNC), statictmp_174 (= CALLFUNC), statictmp_174 (= CALLFUNC), statictmp_174 (= CALLFUNC), statictmp_174 (= CALLFUNC), statictmp_174 (= CALLFUNC), statictmp_174 (= CALLFUNC), statictmp_174 (= CALLFUNC), statictmp_174 (= CALLFUNC), statictmp_174 (= CALLFUNC), statictmp_174 (= CALLFUNC), statictmp_174 (= CALLFUNC), statictmp_174 (= CALLFUNC), statictmp_174 (= CALLFUNC), statictmp_174 (= CALLFUNC), statictmp_174 (= CALLFUNC), statictmp_174 (= CALLFUNC), statictmp_174 (= CALLFUNC), statictmp_174 (= CALLFUNC)
----------------------------------------------------
file: src/cmd/go/internal/run/run.go
lout: 
----------------------------------------------------
file: src/cmd/go/internal/get/discovery.go
lout: statictmp_6 (= +), getD (= CALLMETH), getF (= CALLMETH), getT (= CALLMETH), getU (= CALLMETH), getFix (= CALLMETH), downloadCache (= MAPLIT), downloadRootCache (= MAPLIT), defaultSecureScheme (= MAPLIT), scpSyntaxRe (= CALLFUNC), statictmp_34 (= +), httpPrefixRE (= CALLFUNC), errUnknownSite (= CALLFUNC), fetchCache (= MAPLIT)
----------------------------------------------------
file: src/cmd/go/internal/modfetch/cache.go
lout: errNotCached (= CALLFUNC), proxyURL (= CALLFUNC), pseudoVersionRE (= CALLFUNC)
----------------------------------------------------
file: src/cmd/go/internal/modconv/convert.go
lout: Converters (= MAPLIT)
----------------------------------------------------
file: src/cmd/go/internal/modload/build.go
lout: nil n.Left on infoStart, _ = hex.DecodeString("3077af0c9274080241e1c107e6d618e6"), nil n.Left on infoEnd, _ = hex.DecodeString("f932433186182072008242104116d8f2"), MustUseModules (= CALLFUNC), gitOriginRE (= CALLFUNC), importCommentRE (= CALLFUNC), anyTags (= MAPLIT), errMissing (= CALLFUNC), ErrRequire (= CALLFUNC)
----------------------------------------------------
file: src/cmd/go/internal/clean/clean.go
lout: cleaned (= MAPLIT), cleanDir (= MAPLIT), cleanFile (= MAPLIT), cleanExt (= MAPLIT)
----------------------------------------------------
file: src/cmd/go/internal/envcmd/env.go
lout: envJson (= CALLMETH)
----------------------------------------------------
file: src/cmd/go/internal/list/context.go
lout: listCompiled (= CALLMETH), listDeps (= CALLMETH), listE (= CALLMETH), listExport (= CALLMETH), listFmt (= CALLMETH), listFind (= CALLMETH), listJson (= CALLMETH), listM (= CALLMETH), listU (= CALLMETH), listTest (= CALLMETH), listVersions (= CALLMETH)
----------------------------------------------------
file: src/cmd/go/internal/fmtcmd/fmt.go
lout: 
----------------------------------------------------
file: src/cmd/go/internal/modget/get.go
lout: statictmp_1 (= +), getD (= CALLMETH), getF (= CALLMETH), getFix (= CALLMETH), getM (= CALLMETH), getT (= CALLMETH)
----------------------------------------------------
file: src/cmd/go/internal/vet/vet.go
lout: 
----------------------------------------------------
file: src/cmd/go/internal/fix/fix.go
lout: 
----------------------------------------------------
file: src/cmd/go/internal/generate/generate.go
lout: stop (= CALLFUNC)
----------------------------------------------------
file: src/cmd/go/internal/modcmd/download.go
lout: downloadJSON (= CALLMETH), editFmt (= CALLMETH), editGo (= CALLMETH), editJSON (= CALLMETH), editPrint (= CALLMETH), editModule (= CALLMETH), copiedMetadata (= MAKEMAP), whyM (= CALLMETH), whyVendor (= CALLMETH)
----------------------------------------------------
file: src/cmd/go/internal/bug/bug.go
lout: 
----------------------------------------------------
file: src/cmd/go/internal/test/cover.go
lout: errBadTestInputs (= CALLFUNC), errFileTooNew (= CALLFUNC), statictmp_23 (= new), statictmp_31 (= new), statictmp_40 (= new)
----------------------------------------------------
file: src/cmd/go/alldocs.go
lout: 
Building Go toolchain2 using go_bootstrap and Go toolchain1.
# errors
----------------------------------------------------
file: src/errors/errors.go
lout: 
# internal/race
----------------------------------------------------
file: src/internal/race/doc.go
lout: 
# runtime/internal/sys
----------------------------------------------------
file: src/runtime/internal/sys/arch.go
lout: 
# runtime/internal/atomic
----------------------------------------------------
file: src/runtime/internal/atomic/atomic_amd64x.go
lout: 
# internal/cpu
----------------------------------------------------
file: src/internal/cpu/cpu.go
lout: 
# runtime/internal/math
----------------------------------------------------
file: src/runtime/internal/math/math.go
lout: 
# sync/atomic
----------------------------------------------------
file: src/sync/atomic/doc.go
lout: 
# unicode/utf8
----------------------------------------------------
file: src/unicode/utf8/utf8.go
lout: 
# math/bits
----------------------------------------------------
file: src/math/bits/bits.go
lout: 
# internal/bytealg
----------------------------------------------------
file: src/internal/bytealg/bytealg.go
lout: 
# internal/testlog
----------------------------------------------------
file: src/internal/testlog/log.go
lout: 
# encoding
----------------------------------------------------
file: src/encoding/encoding.go
lout: 
# unicode/utf16
----------------------------------------------------
file: src/unicode/utf16/utf16.go
lout: 
# unicode
----------------------------------------------------
file: src/unicode/casetables.go
lout: Categories (= MAPLIT), Scripts (= MAPLIT), Properties (= MAPLIT), FoldCategory (= MAPLIT), FoldScript (= MAPLIT)
# math
----------------------------------------------------
file: src/math/abs.go
lout: useFMA (= &&)
# strconv
----------------------------------------------------
file: src/strconv/atob.go
lout: ErrRange (= CALLFUNC), ErrSyntax (= CALLFUNC)
# runtime
----------------------------------------------------
file: src/runtime/alg.go
lout: inf (= CALLFUNC), uint16Type (= DOTPTR), uint32Type (= DOTPTR), uint64Type (= DOTPTR), stringType (= DOTPTR), sliceType (= DOTPTR), chansendpc (= CALLFUNC), chanrecvpc (= CALLFUNC)
# sync
----------------------------------------------------
file: src/sync/cond.go
lout: expunged (= CONVNOP)
# math/rand
----------------------------------------------------
file: src/math/rand/exp.go
lout: globalRand (= CALLFUNC)
# io
----------------------------------------------------
file: src/io/io.go
lout: ErrShortWrite (= CALLFUNC), ErrShortBuffer (= CALLFUNC), EOF (= CALLFUNC), ErrUnexpectedEOF (= CALLFUNC), ErrNoProgress (= CALLFUNC), errWhence (= CALLFUNC), errOffset (= CALLFUNC), ErrClosedPipe (= CALLFUNC)
# bytes
----------------------------------------------------
file: src/bytes/buffer.go
lout: ErrTooLarge (= CALLFUNC), errNegativeRead (= CALLFUNC)
# bufio
----------------------------------------------------
file: src/bufio/bufio.go
lout: ErrInvalidUnreadByte (= CALLFUNC), ErrInvalidUnreadRune (= CALLFUNC), ErrBufferFull (= CALLFUNC), ErrNegativeCount (= CALLFUNC), errNegativeRead (= CALLFUNC), errNegativeWrite (= CALLFUNC), ErrTooLong (= CALLFUNC), ErrNegativeAdvance (= CALLFUNC), ErrAdvanceTooFar (= CALLFUNC), ErrFinalToken (= CALLFUNC)
# strings
----------------------------------------------------
file: src/strings/builder.go
lout: 
# hash
----------------------------------------------------
file: src/hash/hash.go
lout: 
# path
----------------------------------------------------
file: src/path/match.go
lout: ErrBadPattern (= CALLFUNC)
# crypto
----------------------------------------------------
file: src/crypto/crypto.go
lout: hashes (= MAKESLICE)
# hash/adler32
----------------------------------------------------
file: src/hash/adler32/adler32.go
lout: 
# text/tabwriter
----------------------------------------------------
file: src/text/tabwriter/tabwriter.go
lout: 
# crypto/sha1
----------------------------------------------------
file: src/crypto/sha1/sha1.go
lout: useAVX2 (= &&)
# html
----------------------------------------------------
file: src/html/entity.go
lout: htmlEscaper (= CALLFUNC)
# hash/crc32
----------------------------------------------------
file: src/hash/crc32/crc32.go
lout: IEEETable (= CALLFUNC)
# crypto/sha256
----------------------------------------------------
file: src/crypto/sha256/sha256.go
lout: useAVX2 (= &&)
# syscall
----------------------------------------------------
file: src/syscall/bpf_darwin.go
lout: envs (= CALLFUNC), minRoutingSockaddrLen (= CALLFUNC), statictmp_47 (= MAKEMAP)
# internal/syscall/unix
----------------------------------------------------
file: src/internal/syscall/unix/at_darwin.go
lout: 
# time
----------------------------------------------------
file: src/time/format.go
lout: atoiError (= CALLFUNC), errBad (= CALLFUNC), errLeadingInt (= CALLFUNC), unitMap (= MAPLIT), startNano (= -), errLocation (= CALLFUNC), badData (= CALLFUNC), statictmp_21 (= +)
# reflect
----------------------------------------------------
file: src/reflect/deepequal.go
lout: uint8Type (= DOTTYPE)
# internal/poll
----------------------------------------------------
file: src/internal/poll/fd.go
lout: ErrNetClosing (= CALLFUNC), ErrFileClosing (= CALLFUNC), ErrNoDeadline (= CALLFUNC)
# sort
----------------------------------------------------
file: src/sort/search.go
lout: 
# internal/fmtsort
----------------------------------------------------
file: src/internal/fmtsort/sort.go
lout: 
# container/heap
----------------------------------------------------
file: src/container/heap/heap.go
lout: 
# encoding/binary
----------------------------------------------------
file: src/encoding/binary/binary.go
lout: overflow (= CALLFUNC)
# cmd/internal/sys
----------------------------------------------------
file: src/cmd/internal/sys/arch.go
lout: statictmp_1 (= NAME), statictmp_3 (= NAME), statictmp_5 (= NAME), statictmp_7 (= NAME), statictmp_9 (= NAME), statictmp_11 (= NAME), statictmp_13 (= NAME), statictmp_15 (= NAME), statictmp_17 (= NAME), statictmp_19 (= NAME), statictmp_21 (= NAME), statictmp_23 (= NAME), statictmp_25 (= NAME)
# encoding/base64
----------------------------------------------------
file: src/encoding/base64/base64.go
lout: StdEncoding (= CALLFUNC), URLEncoding (= CALLFUNC), RawStdEncoding (= CALLMETH), RawURLEncoding (= CALLMETH)
# crypto/md5
----------------------------------------------------
file: src/crypto/md5/md5.go
lout: 
# os
----------------------------------------------------
file: src/os/dir.go
lout: ErrInvalid (= CALLFUNC), ErrPermission (= CALLFUNC), ErrExist (= CALLFUNC), ErrNotExist (= CALLFUNC), ErrClosed (= CALLFUNC), ErrNoDeadline (= NAME), errFinished (= CALLFUNC), nil n.Left on initCwd, initCwdErr = Getwd(), Stdin (= CALLFUNC), Stdout (= CALLFUNC), Stderr (= CALLFUNC)
# path/filepath
----------------------------------------------------
file: src/path/filepath/match.go
lout: ErrBadPattern (= CALLFUNC), SkipDir (= CALLFUNC)
# runtime/debug
----------------------------------------------------
file: src/runtime/debug/garbage.go
lout: 
# io/ioutil
----------------------------------------------------
file: src/io/ioutil/ioutil.go
lout: 
# regexp/syntax
----------------------------------------------------
file: src/regexp/syntax/compile.go
lout: perlGroup (= MAPLIT), posixGroup (= MAPLIT)
# fmt
----------------------------------------------------
file: src/fmt/doc.go
lout: complexError (= CALLFUNC), boolError (= CALLFUNC)
# log
----------------------------------------------------
file: src/log/log.go
lout: std (= CALLFUNC)
# regexp
----------------------------------------------------
file: src/regexp/backtrack.go
lout: 
# text/scanner
----------------------------------------------------
file: src/text/scanner/scanner.go
lout: tokenString (= MAPLIT)
# cmd/internal/src
----------------------------------------------------
file: src/cmd/internal/src/pos.go
lout: 
# cmd/internal/edit
----------------------------------------------------
file: src/cmd/internal/edit/edit.go
lout: 
# cmd/internal/bio
----------------------------------------------------
file: src/cmd/internal/bio/buf.go
lout: 
# flag
----------------------------------------------------
file: src/flag/flag.go
lout: ErrHelp (= CALLFUNC), errParse (= CALLFUNC), errRange (= CALLFUNC), CommandLine (= CALLFUNC)
# go/token
----------------------------------------------------
file: src/go/token/position.go
lout: 
# cmd/internal/objabi
----------------------------------------------------
file: src/cmd/internal/objabi/autotype.go
lout: GOROOT (= CALLFUNC), GOARCH (= CALLFUNC), GOOS (= CALLFUNC), GO386 (= CALLFUNC), GOARM (= CALLFUNC), GOMIPS (= CALLFUNC), GOMIPS64 (= CALLFUNC), defaultExpstring (= CALLFUNC)
# go/scanner
----------------------------------------------------
file: src/go/scanner/errors.go
lout: 
# cmd/asm/internal/flags
----------------------------------------------------
file: src/cmd/asm/internal/flags/flags.go
lout: Debug (= CALLFUNC), OutputFile (= CALLFUNC), PrintOut (= CALLFUNC), TrimPath (= CALLFUNC), Shared (= CALLFUNC), Dynlink (= CALLFUNC), AllErrors (= CALLFUNC), SymABIs (= CALLFUNC)
# cmd/internal/dwarf
----------------------------------------------------
file: src/cmd/internal/dwarf/dwarf.go
lout: 
# cmd/asm/internal/lex
----------------------------------------------------
file: src/cmd/asm/internal/lex/input.go
lout: 
# compress/flate
----------------------------------------------------
file: src/compress/flate/deflate.go
lout: fixedLiteralEncoding (= CALLFUNC), fixedOffsetEncoding (= CALLFUNC)
# compress/zlib
----------------------------------------------------
file: src/compress/zlib/reader.go
lout: ErrChecksum (= CALLFUNC), ErrDictionary (= CALLFUNC), ErrHeader (= CALLFUNC)
# context
----------------------------------------------------
file: src/context/context.go
lout: Canceled (= CALLFUNC), background (= new), todo (= new), closedchan (= MAKECHAN)
# debug/dwarf
----------------------------------------------------
file: src/debug/dwarf/attr_string.go
lout: _Attr_map (= MAPLIT), attrIsExprloc (= MAPLIT), attrPtrClass (= MAPLIT), knownOpcodeLengths (= MAPLIT), ErrUnknownPC (= CALLFUNC)
# os/exec
----------------------------------------------------
file: src/os/exec/exec.go
lout: ErrNotFound (= CALLFUNC)
# cmd/internal/xcoff
----------------------------------------------------
file: src/cmd/internal/xcoff/file.go
lout: 
# cmd/internal/obj
----------------------------------------------------
file: src/cmd/internal/obj/abi_string.go
lout: 
# debug/macho
----------------------------------------------------
file: src/debug/macho/fat.go
lout: 
# go/ast
----------------------------------------------------
file: src/go/ast/ast.go
lout: 
# debug/elf
----------------------------------------------------
file: src/debug/elf/elf.go
lout: ErrNoSymbols (= CALLFUNC)
# cmd/internal/obj/mips
----------------------------------------------------
file: src/cmd/internal/obj/mips/a.out.go
lout: MIPSDWARFRegisters (= MAPLIT), Linkmips64 (= NAME), Linkmips64 (= NAME), Linkmips64le (= NAME), Linkmips64le (= NAME), Linkmips (= NAME), Linkmips (= NAME), Linkmipsle (= NAME), Linkmipsle (= NAME)
# cmd/internal/obj/arm
----------------------------------------------------
file: src/cmd/internal/obj/arm/a.out.go
lout: ARMDWARFRegisters (= MAPLIT), unaryDst (= MAPLIT), Linkarm (= NAME), Linkarm (= NAME), Linkarm (= NAME)
# cmd/internal/obj/wasm
----------------------------------------------------
file: src/cmd/internal/obj/wasm/a.out.go
lout: Register (= MAPLIT), unaryDst (= MAPLIT), Linkwasm (= NAME), Linkwasm (= NAME)
# cmd/internal/obj/ppc64
----------------------------------------------------
file: src/cmd/internal/obj/ppc64/a.out.go
lout: PPC64DWARFRegisters (= MAPLIT), Linkppc64 (= NAME), Linkppc64 (= NAME), Linkppc64le (= NAME), Linkppc64le (= NAME)
# cmd/internal/obj/s390x
----------------------------------------------------
file: src/cmd/internal/obj/s390x/a.out.go
lout: S390XDWARFRegisters (= MAPLIT), unaryDst (= MAPLIT), Links390x (= NAME), Links390x (= NAME), Links390x (= NAME)
# cmd/internal/obj/arm64
----------------------------------------------------
file: src/cmd/internal/obj/arm64/a.out.go
lout: ARM64DWARFRegisters (= MAPLIT), unaryDst (= MAPLIT), Linkarm64 (= NAME), Linkarm64 (= NAME), Linkarm64 (= NAME)
# debug/pe
----------------------------------------------------
file: src/debug/pe/file.go
lout: sizeofOptionalHeader32 (= CONV), sizeofOptionalHeader64 (= CONV)
# go/parser
----------------------------------------------------
file: src/go/parser/interface.go
lout: unresolved (= new), stmtStart (= MAPLIT), declStart (= MAPLIT), exprEnd (= MAPLIT)
# go/printer
----------------------------------------------------
file: src/go/printer/nodes.go
lout: 
# cmd/internal/obj/x86
----------------------------------------------------
file: src/cmd/internal/obj/x86/a.out.go
lout: AMD64DWARFRegisters (= MAPLIT), X86DWARFRegisters (= MAPLIT), isAndroid (= ==), unaryDst (= MAPLIT), Linkamd64 (= NAME), Linkamd64 (= NAME), Linkamd64 (= NAME), Linkamd64p32 (= NAME), Linkamd64p32 (= NAME), Linkamd64p32 (= NAME), Link386 (= NAME), Link386 (= NAME), Link386 (= NAME)
# encoding/hex
----------------------------------------------------
file: src/encoding/hex/hex.go
lout: ErrLength (= CALLFUNC)
# cmd/asm/internal/arch
----------------------------------------------------
file: src/cmd/asm/internal/arch/arch.go
lout: armLS (= MAPLIT), armSCOND (= MAPLIT), armJump (= MAPLIT), arm64LS (= MAPLIT), arm64Jump (= MAPLIT)
# cmd/compile/internal/types
----------------------------------------------------
file: src/cmd/compile/internal/types/etype_string.go
lout: pkgMap (= MAKEMAP), statictmp_1 (= MAKEMAP), internedStrings (= MAPLIT), Idealint (= CALLFUNC), Idealrune (= CALLFUNC), Idealfloat (= CALLFUNC), Idealcomplex (= CALLFUNC), TypeInvalid (= CALLFUNC), TypeMem (= CALLFUNC), TypeFlags (= CALLFUNC), TypeVoid (= CALLFUNC), TypeInt128 (= CALLFUNC)
# cmd/asm/internal/asm
----------------------------------------------------
file: src/cmd/asm/internal/asm/asm.go
lout: EOF (= CALLFUNC)
# cmd/asm
----------------------------------------------------
file: src/cmd/asm/doc.go
lout: 
# math/big
----------------------------------------------------
file: src/math/big/accuracy_string.go
lout: support_adx (= &&), three (= CALLFUNC)
# cmd/compile/internal/syntax
----------------------------------------------------
file: src/cmd/compile/internal/syntax/branches.go
lout: invalid (= new)
# cmd/internal/gcprog
----------------------------------------------------
file: src/cmd/internal/gcprog/gcprog.go
lout: 
# cmd/cgo
----------------------------------------------------
file: src/cmd/cgo/ast.go
lout: debugDefine (= CALLFUNC), debugGcc (= CALLFUNC), nameToC (= MAPLIT), typedef (= MAKEMAP), goIdent (= MAKEMAP), unionWithPointer (= MAKEMAP), dwarfToName (= MAPLIT), jniTypes (= MAPLIT), ptrSizeMap (= MAPLIT), intSizeMap (= MAPLIT), fset (= CALLFUNC), dynobj (= CALLFUNC), dynout (= CALLFUNC), dynpackage (= CALLFUNC), dynlinker (= CALLFUNC), godefs (= CALLFUNC), srcDir (= CALLFUNC), objDir (= CALLFUNC), importPath (= CALLFUNC), exportHeader (= CALLFUNC), gccgo (= CALLFUNC), gccgoprefix (= CALLFUNC), gccgopkgpath (= CALLFUNC), importRuntimeCgo (= CALLFUNC), importSyscall (= CALLFUNC), isBuiltin (= MAPLIT), goTypes (= MAPLIT), builtinDefs (= MAPLIT)
# encoding/json
----------------------------------------------------
file: src/encoding/json/decode.go
lout: textUnmarshalerType (= CALLINTER), numberType (= CALLFUNC), marshalerType (= CALLINTER), textMarshalerType (= CALLINTER), float32Encoder (= CALLPART), float64Encoder (= CALLPART)
# net/url
----------------------------------------------------
file: src/net/url/url.go
lout: 
# internal/goroot
----------------------------------------------------
file: src/internal/goroot/gc.go
lout: 
# compress/gzip
----------------------------------------------------
file: src/compress/gzip/gunzip.go
lout: ErrChecksum (= CALLFUNC), ErrHeader (= CALLFUNC), le (= NAME)
# runtime/pprof
----------------------------------------------------
file: src/runtime/pprof/elf.go
lout: errBadELF (= CALLFUNC), errNoBuildID (= CALLFUNC)
# text/template/parse
----------------------------------------------------
file: src/text/template/parse/lex.go
lout: key (= MAPLIT)
# runtime/trace
----------------------------------------------------
file: src/runtime/trace/annotation.go
lout: 
# cmd/link/internal/sym
----------------------------------------------------
file: src/cmd/link/internal/sym/attribute.go
lout: RelROMap (= MAPLIT)
# cmd/link/internal/loadelf
----------------------------------------------------
file: src/cmd/link/internal/loadelf/ldelf.go
lout: 
# text/template
----------------------------------------------------
file: src/text/template/doc.go
lout: maxExecDepth (= CALLFUNC), missingVal (= CALLFUNC), errorType (= CALLINTER), fmtStringerType (= CALLINTER), reflectValueType (= CALLINTER), errBadComparisonType (= CALLFUNC), errNoComparison (= CALLFUNC), errBadComparison (= CALLFUNC), builtins (= MAPLIT), builtinFuncs (= CALLFUNC)
# cmd/link/internal/loadmacho
----------------------------------------------------
file: src/cmd/link/internal/loadmacho/ldmacho.go
lout: 
# cmd/link/internal/loadxcoff
----------------------------------------------------
file: src/cmd/link/internal/loadxcoff/ldxcoff.go
lout: 
# cmd/link/internal/loadpe
----------------------------------------------------
file: src/cmd/link/internal/loadpe/ldpe.go
lout: 
# cmd/link/internal/objfile
----------------------------------------------------
file: src/cmd/link/internal/objfile/objfile.go
lout: 
# go/doc
----------------------------------------------------
file: src/go/doc/comment.go
lout: inTest (= &&), matchRx (= CALLFUNC), nonAlphaNumRx (= CALLFUNC), outputPrefix (= CALLFUNC), underscore (= CALLFUNC), noteMarkerRx (= CALLFUNC), noteCommentRx (= CALLFUNC), predeclaredTypes (= MAPLIT), predeclaredFuncs (= MAPLIT), predeclaredConstants (= MAPLIT)
# go/build
----------------------------------------------------
file: src/go/build/build.go
lout: cgoEnabled (= MAPLIT), Default (= CALLFUNC), errNoModules (= CALLFUNC), knownOS (= MAKEMAP), knownArch (= MAKEMAP), ToolDir (= CALLFUNC), errSyntax (= CALLFUNC), errNUL (= CALLFUNC)
# cmd/link/internal/ld
----------------------------------------------------
file: src/cmd/link/internal/ld/ar.go
lout: strdata (= MAKEMAP), seenlib (= MAKEMAP), flagBuildid (= CALLFUNC), flagOutfile (= CALLFUNC), flagPluginPath (= CALLFUNC), flagInstallSuffix (= CALLFUNC), flagDumpDep (= CALLFUNC), flagRace (= CALLFUNC), flagMsan (= CALLFUNC), flagFieldTrack (= CALLFUNC), flagLibGCC (= CALLFUNC), flagTmpdir (= CALLFUNC), flagExtld (= CALLFUNC), flagExtldflags (= CALLFUNC), flagExtar (= CALLFUNC), flagA (= CALLFUNC), FlagC (= CALLFUNC), FlagD (= CALLFUNC), flagF (= CALLFUNC), flagG (= CALLFUNC), flagH (= CALLFUNC), flagN (= CALLFUNC), FlagS (= CALLFUNC), flagU (= CALLFUNC), FlagW (= CALLFUNC), flagInterpreter (= CALLFUNC), FlagDebugTramp (= CALLFUNC), FlagRound (= CALLFUNC), FlagTextAddr (= CALLFUNC), FlagDataAddr (= CALLFUNC), flagEntrySymbol (= CALLFUNC), cpuprofile (= CALLFUNC), memprofile (= CALLFUNC), memprofilerate (= CALLFUNC), start (= CALLFUNC), currDwscnoff (= MAKEMAP)
# cmd/link/internal/arm64
----------------------------------------------------
file: src/cmd/link/internal/arm64/asm.go
lout: 
# cmd/link/internal/amd64
----------------------------------------------------
file: src/cmd/link/internal/amd64/asm.go
lout: 
# cmd/link/internal/arm
----------------------------------------------------
file: src/cmd/link/internal/arm/asm.go
lout: 
# cmd/link/internal/mips
----------------------------------------------------
file: src/cmd/link/internal/mips/asm.go
lout: 
# cmd/link/internal/mips64
----------------------------------------------------
file: src/cmd/link/internal/mips64/asm.go
lout: 
# cmd/link/internal/wasm
----------------------------------------------------
file: src/cmd/link/internal/wasm/asm.go
lout: wasmFuncTypes (= MAPLIT), nameRegexp (= CALLFUNC)
# cmd/link/internal/ppc64
----------------------------------------------------
file: src/cmd/link/internal/ppc64/asm.go
lout: 
# cmd/link/internal/s390x
----------------------------------------------------
file: src/cmd/link/internal/s390x/asm.go
lout: 
# cmd/link/internal/x86
----------------------------------------------------
file: src/cmd/link/internal/x86/asm.go
lout: 
# cmd/link
----------------------------------------------------
file: src/cmd/link/doc.go
lout: 
# cmd/compile/internal/ssa
----------------------------------------------------
file: src/cmd/compile/internal/ssa/biasedsparsemap.go
lout: opMax (= MAPLIT), opUMax (= MAPLIT), opMin (= MAPLIT), domainRelationTable (= MAPLIT), ctzNonZeroOp (= MAPLIT), mostNegativeDividend (= MAPLIT), opCmpLoadMap (= MAPLIT), passes (= ==)
# cmd/compile/internal/gc
----------------------------------------------------
file: src/cmd/compile/internal/gc/alg.go
lout: numImport (= MAKEMAP), sharedProgArray (= new), declImporter (= MAPLIT), inlineImporter (= MAPLIT), importMap (= MAPLIT), goVersionRE (= CALLFUNC), allowedStdPragmas (= MAPLIT), prealloc (= MAPLIT), signatset (= MAKEMAP), typepkg (= CALLFUNC), inittemps (= MAKEMAP), opToSSA (= MAPLIT), fpConvOpToSSA (= MAPLIT), fpConvOpToSSA32 (= MAPLIT), uint64fpConvOpToSSA (= MAPLIT), shiftOpToSSA (= MAPLIT), dotlist (= MAKESLICE), dotField (= MAPLIT), mapaccess1 (= CALLFUNC), mapaccess2 (= CALLFUNC), mapassign (= CALLFUNC), mapdelete (= CALLFUNC)
# cmd/compile/internal/mips
----------------------------------------------------
file: src/cmd/compile/internal/mips/galign.go
lout: blockJump (= MAPLIT)
# cmd/compile/internal/arm64
----------------------------------------------------
file: src/cmd/compile/internal/arm64/galign.go
lout: darwin (= ==), condBits (= MAPLIT), blockJump (= MAPLIT)
# cmd/compile/internal/arm
----------------------------------------------------
file: src/cmd/compile/internal/arm/galign.go
lout: condBits (= MAPLIT), blockJump (= MAPLIT)
# cmd/compile/internal/amd64
----------------------------------------------------
file: src/cmd/compile/internal/amd64/galign.go
lout: isPlan9 (= ==)
# cmd/compile/internal/mips64
----------------------------------------------------
file: src/cmd/compile/internal/mips64/galign.go
lout: blockJump (= MAPLIT)
# cmd/compile/internal/wasm
----------------------------------------------------
file: src/cmd/compile/internal/wasm/ssa.go
lout: 
# cmd/compile/internal/ppc64
----------------------------------------------------
file: src/cmd/compile/internal/ppc64/galign.go
lout: iselOps (= MAPLIT)
# cmd/compile/internal/s390x
----------------------------------------------------
file: src/cmd/compile/internal/s390x/galign.go
lout: 
# cmd/compile/internal/x86
----------------------------------------------------
file: src/cmd/compile/internal/x86/387.go
lout: 
# cmd/compile
----------------------------------------------------
file: src/cmd/compile/doc.go
lout: archInits (= MAPLIT)
Building Go toolchain3 using go_bootstrap and Go toolchain2.
# internal/race
----------------------------------------------------
file: src/internal/race/doc.go
lout: 
# errors
----------------------------------------------------
file: src/errors/errors.go
lout: 
# runtime/internal/sys
----------------------------------------------------
file: src/runtime/internal/sys/arch.go
lout: 
# runtime/internal/atomic
----------------------------------------------------
file: src/runtime/internal/atomic/atomic_amd64x.go
lout: 
# runtime/internal/math
----------------------------------------------------
file: src/runtime/internal/math/math.go
lout: 
# internal/cpu
----------------------------------------------------
file: src/internal/cpu/cpu.go
lout: 
# sync/atomic
----------------------------------------------------
file: src/sync/atomic/doc.go
lout: 
# unicode/utf8
----------------------------------------------------
file: src/unicode/utf8/utf8.go
lout: 
# math/bits
----------------------------------------------------
file: src/math/bits/bits.go
lout: 
# internal/testlog
----------------------------------------------------
file: src/internal/testlog/log.go
lout: 
# internal/bytealg
----------------------------------------------------
file: src/internal/bytealg/bytealg.go
lout: 
# encoding
----------------------------------------------------
file: src/encoding/encoding.go
lout: 
# unicode/utf16
----------------------------------------------------
file: src/unicode/utf16/utf16.go
lout: 
# unicode
----------------------------------------------------
file: src/unicode/casetables.go
lout: Categories (= MAPLIT), Scripts (= MAPLIT), Properties (= MAPLIT), FoldCategory (= MAPLIT), FoldScript (= MAPLIT)
# math
----------------------------------------------------
file: src/math/abs.go
lout: useFMA (= &&)
# strconv
----------------------------------------------------
file: src/strconv/atob.go
lout: ErrRange (= CALLFUNC), ErrSyntax (= CALLFUNC)
# runtime
----------------------------------------------------
file: src/runtime/alg.go
lout: inf (= CALLFUNC), uint16Type (= DOTPTR), uint32Type (= DOTPTR), uint64Type (= DOTPTR), stringType (= DOTPTR), sliceType (= DOTPTR), chansendpc (= CALLFUNC), chanrecvpc (= CALLFUNC)
# sync
----------------------------------------------------
file: src/sync/cond.go
lout: expunged (= CONVNOP)
# io
----------------------------------------------------
file: src/io/io.go
lout: ErrShortWrite (= CALLFUNC), ErrShortBuffer (= CALLFUNC), EOF (= CALLFUNC), ErrUnexpectedEOF (= CALLFUNC), ErrNoProgress (= CALLFUNC), errWhence (= CALLFUNC), errOffset (= CALLFUNC), ErrClosedPipe (= CALLFUNC)
# math/rand
----------------------------------------------------
file: src/math/rand/exp.go
lout: globalRand (= CALLFUNC)
# bytes
----------------------------------------------------
file: src/bytes/buffer.go
lout: ErrTooLarge (= CALLFUNC), errNegativeRead (= CALLFUNC)
# bufio
----------------------------------------------------
file: src/bufio/bufio.go
lout: ErrInvalidUnreadByte (= CALLFUNC), ErrInvalidUnreadRune (= CALLFUNC), ErrBufferFull (= CALLFUNC), ErrNegativeCount (= CALLFUNC), errNegativeRead (= CALLFUNC), errNegativeWrite (= CALLFUNC), ErrTooLong (= CALLFUNC), ErrNegativeAdvance (= CALLFUNC), ErrAdvanceTooFar (= CALLFUNC), ErrFinalToken (= CALLFUNC)
# strings
----------------------------------------------------
file: src/strings/builder.go
lout: 
# hash
----------------------------------------------------
file: src/hash/hash.go
lout: 
# crypto
----------------------------------------------------
file: src/crypto/crypto.go
lout: hashes (= MAKESLICE)
# path
----------------------------------------------------
file: src/path/match.go
lout: ErrBadPattern (= CALLFUNC)
# hash/adler32
----------------------------------------------------
file: src/hash/adler32/adler32.go
lout: 
# text/tabwriter
----------------------------------------------------
file: src/text/tabwriter/tabwriter.go
lout: 
# html
----------------------------------------------------
file: src/html/entity.go
lout: htmlEscaper (= CALLFUNC)
# crypto/sha1
----------------------------------------------------
file: src/crypto/sha1/sha1.go
lout: useAVX2 (= &&)
# hash/crc32
----------------------------------------------------
file: src/hash/crc32/crc32.go
lout: IEEETable (= CALLFUNC)
# crypto/sha256
----------------------------------------------------
file: src/crypto/sha256/sha256.go
lout: useAVX2 (= &&)
# syscall
----------------------------------------------------
file: src/syscall/bpf_darwin.go
lout: envs (= CALLFUNC), minRoutingSockaddrLen (= CALLFUNC), statictmp_47 (= MAKEMAP)
# internal/syscall/unix
----------------------------------------------------
file: src/internal/syscall/unix/at_darwin.go
lout: 
# time
----------------------------------------------------
file: src/time/format.go
lout: atoiError (= CALLFUNC), errBad (= CALLFUNC), errLeadingInt (= CALLFUNC), unitMap (= MAPLIT), startNano (= -), errLocation (= CALLFUNC), badData (= CALLFUNC), statictmp_21 (= +)
# reflect
----------------------------------------------------
file: src/reflect/deepequal.go
lout: uint8Type (= DOTTYPE)
# internal/poll
----------------------------------------------------
file: src/internal/poll/fd.go
lout: ErrNetClosing (= CALLFUNC), ErrFileClosing (= CALLFUNC), ErrNoDeadline (= CALLFUNC)
# sort
----------------------------------------------------
file: src/sort/search.go
lout: 
# internal/fmtsort
----------------------------------------------------
file: src/internal/fmtsort/sort.go
lout: 
# encoding/binary
----------------------------------------------------
file: src/encoding/binary/binary.go
lout: overflow (= CALLFUNC)
# container/heap
----------------------------------------------------
file: src/container/heap/heap.go
lout: 
# cmd/internal/sys
----------------------------------------------------
file: src/cmd/internal/sys/arch.go
lout: statictmp_1 (= NAME), statictmp_3 (= NAME), statictmp_5 (= NAME), statictmp_7 (= NAME), statictmp_9 (= NAME), statictmp_11 (= NAME), statictmp_13 (= NAME), statictmp_15 (= NAME), statictmp_17 (= NAME), statictmp_19 (= NAME), statictmp_21 (= NAME), statictmp_23 (= NAME), statictmp_25 (= NAME)
# encoding/base64
----------------------------------------------------
file: src/encoding/base64/base64.go
lout: StdEncoding (= CALLFUNC), URLEncoding (= CALLFUNC), RawStdEncoding (= CALLMETH), RawURLEncoding (= CALLMETH)
# crypto/md5
----------------------------------------------------
file: src/crypto/md5/md5.go
lout: 
# os
----------------------------------------------------
file: src/os/dir.go
lout: ErrInvalid (= CALLFUNC), ErrPermission (= CALLFUNC), ErrExist (= CALLFUNC), ErrNotExist (= CALLFUNC), ErrClosed (= CALLFUNC), ErrNoDeadline (= NAME), errFinished (= CALLFUNC), nil n.Left on initCwd, initCwdErr = Getwd(), Stdin (= CALLFUNC), Stdout (= CALLFUNC), Stderr (= CALLFUNC)
# runtime/debug
----------------------------------------------------
file: src/runtime/debug/garbage.go
lout: 
# path/filepath
----------------------------------------------------
file: src/path/filepath/match.go
lout: ErrBadPattern (= CALLFUNC), SkipDir (= CALLFUNC)
# regexp/syntax
----------------------------------------------------
file: src/regexp/syntax/compile.go
lout: perlGroup (= MAPLIT), posixGroup (= MAPLIT)
# io/ioutil
----------------------------------------------------
file: src/io/ioutil/ioutil.go
lout: 
# fmt
----------------------------------------------------
file: src/fmt/doc.go
lout: complexError (= CALLFUNC), boolError (= CALLFUNC)
# regexp
----------------------------------------------------
file: src/regexp/backtrack.go
lout: 
# log
----------------------------------------------------
file: src/log/log.go
lout: std (= CALLFUNC)
# cmd/internal/src
----------------------------------------------------
file: src/cmd/internal/src/pos.go
lout: 
# text/scanner
----------------------------------------------------
file: src/text/scanner/scanner.go
lout: tokenString (= MAPLIT)
# cmd/internal/edit
----------------------------------------------------
file: src/cmd/internal/edit/edit.go
lout: 
# cmd/internal/bio
----------------------------------------------------
file: src/cmd/internal/bio/buf.go
lout: 
# go/token
----------------------------------------------------
file: src/go/token/position.go
lout: 
# flag
----------------------------------------------------
file: src/flag/flag.go
lout: ErrHelp (= CALLFUNC), errParse (= CALLFUNC), errRange (= CALLFUNC), CommandLine (= CALLFUNC)
# cmd/internal/objabi
----------------------------------------------------
file: src/cmd/internal/objabi/autotype.go
lout: GOROOT (= CALLFUNC), GOARCH (= CALLFUNC), GOOS (= CALLFUNC), GO386 (= CALLFUNC), GOARM (= CALLFUNC), GOMIPS (= CALLFUNC), GOMIPS64 (= CALLFUNC), defaultExpstring (= CALLFUNC)
# go/scanner
----------------------------------------------------
file: src/go/scanner/errors.go
lout: 
# cmd/asm/internal/flags
----------------------------------------------------
file: src/cmd/asm/internal/flags/flags.go
lout: Debug (= CALLFUNC), OutputFile (= CALLFUNC), PrintOut (= CALLFUNC), TrimPath (= CALLFUNC), Shared (= CALLFUNC), Dynlink (= CALLFUNC), AllErrors (= CALLFUNC), SymABIs (= CALLFUNC)
# cmd/internal/dwarf
----------------------------------------------------
file: src/cmd/internal/dwarf/dwarf.go
lout: 
# cmd/asm/internal/lex
----------------------------------------------------
file: src/cmd/asm/internal/lex/input.go
lout: 
# compress/flate
----------------------------------------------------
file: src/compress/flate/deflate.go
lout: fixedLiteralEncoding (= CALLFUNC), fixedOffsetEncoding (= CALLFUNC)
# compress/zlib
----------------------------------------------------
file: src/compress/zlib/reader.go
lout: ErrChecksum (= CALLFUNC), ErrDictionary (= CALLFUNC), ErrHeader (= CALLFUNC)
# context
----------------------------------------------------
file: src/context/context.go
lout: Canceled (= CALLFUNC), background (= new), todo (= new), closedchan (= MAKECHAN)
# debug/dwarf
----------------------------------------------------
file: src/debug/dwarf/attr_string.go
lout: _Attr_map (= MAPLIT), attrIsExprloc (= MAPLIT), attrPtrClass (= MAPLIT), knownOpcodeLengths (= MAPLIT), ErrUnknownPC (= CALLFUNC)
# os/exec
----------------------------------------------------
file: src/os/exec/exec.go
lout: ErrNotFound (= CALLFUNC)
# cmd/internal/xcoff
----------------------------------------------------
file: src/cmd/internal/xcoff/file.go
lout: 
# cmd/internal/obj
----------------------------------------------------
file: src/cmd/internal/obj/abi_string.go
lout: 
# debug/macho
----------------------------------------------------
file: src/debug/macho/fat.go
lout: 
# go/ast
----------------------------------------------------
file: src/go/ast/ast.go
lout: 
# debug/elf
----------------------------------------------------
file: src/debug/elf/elf.go
lout: ErrNoSymbols (= CALLFUNC)
# cmd/internal/obj/arm
----------------------------------------------------
file: src/cmd/internal/obj/arm/a.out.go
lout: ARMDWARFRegisters (= MAPLIT), unaryDst (= MAPLIT), Linkarm (= NAME), Linkarm (= NAME), Linkarm (= NAME)
# cmd/internal/obj/mips
----------------------------------------------------
file: src/cmd/internal/obj/mips/a.out.go
lout: MIPSDWARFRegisters (= MAPLIT), Linkmips64 (= NAME), Linkmips64 (= NAME), Linkmips64le (= NAME), Linkmips64le (= NAME), Linkmips (= NAME), Linkmips (= NAME), Linkmipsle (= NAME), Linkmipsle (= NAME)
# cmd/internal/obj/wasm
----------------------------------------------------
file: src/cmd/internal/obj/wasm/a.out.go
lout: Register (= MAPLIT), unaryDst (= MAPLIT), Linkwasm (= NAME), Linkwasm (= NAME)
# cmd/internal/obj/s390x
----------------------------------------------------
file: src/cmd/internal/obj/s390x/a.out.go
lout: S390XDWARFRegisters (= MAPLIT), unaryDst (= MAPLIT), Links390x (= NAME), Links390x (= NAME), Links390x (= NAME)
# debug/pe
----------------------------------------------------
file: src/debug/pe/file.go
lout: sizeofOptionalHeader32 (= CONV), sizeofOptionalHeader64 (= CONV)
# cmd/internal/obj/arm64
----------------------------------------------------
file: src/cmd/internal/obj/arm64/a.out.go
lout: ARM64DWARFRegisters (= MAPLIT), unaryDst (= MAPLIT), Linkarm64 (= NAME), Linkarm64 (= NAME), Linkarm64 (= NAME)
# cmd/internal/obj/ppc64
----------------------------------------------------
file: src/cmd/internal/obj/ppc64/a.out.go
lout: PPC64DWARFRegisters (= MAPLIT), Linkppc64 (= NAME), Linkppc64 (= NAME), Linkppc64le (= NAME), Linkppc64le (= NAME)
# cmd/compile/internal/types
----------------------------------------------------
file: src/cmd/compile/internal/types/etype_string.go
lout: pkgMap (= MAKEMAP), statictmp_1 (= MAKEMAP), internedStrings (= MAPLIT), Idealint (= CALLFUNC), Idealrune (= CALLFUNC), Idealfloat (= CALLFUNC), Idealcomplex (= CALLFUNC), TypeInvalid (= CALLFUNC), TypeMem (= CALLFUNC), TypeFlags (= CALLFUNC), TypeVoid (= CALLFUNC), TypeInt128 (= CALLFUNC)
# go/parser
----------------------------------------------------
file: src/go/parser/interface.go
lout: unresolved (= new), stmtStart (= MAPLIT), declStart (= MAPLIT), exprEnd (= MAPLIT)
# go/printer
----------------------------------------------------
file: src/go/printer/nodes.go
lout: 
# encoding/hex
----------------------------------------------------
file: src/encoding/hex/hex.go
lout: ErrLength (= CALLFUNC)
# cmd/internal/obj/x86
----------------------------------------------------
file: src/cmd/internal/obj/x86/a.out.go
lout: AMD64DWARFRegisters (= MAPLIT), X86DWARFRegisters (= MAPLIT), isAndroid (= ==), unaryDst (= MAPLIT), Linkamd64 (= NAME), Linkamd64 (= NAME), Linkamd64 (= NAME), Linkamd64p32 (= NAME), Linkamd64p32 (= NAME), Linkamd64p32 (= NAME), Link386 (= NAME), Link386 (= NAME), Link386 (= NAME)
# cmd/asm/internal/arch
----------------------------------------------------
file: src/cmd/asm/internal/arch/arch.go
lout: armLS (= MAPLIT), armSCOND (= MAPLIT), armJump (= MAPLIT), arm64LS (= MAPLIT), arm64Jump (= MAPLIT)
# cmd/asm/internal/asm
----------------------------------------------------
file: src/cmd/asm/internal/asm/asm.go
lout: EOF (= CALLFUNC)
# cmd/asm
----------------------------------------------------
file: src/cmd/asm/doc.go
lout: 
# math/big
----------------------------------------------------
file: src/math/big/accuracy_string.go
lout: support_adx (= &&), three (= CALLFUNC)
# cmd/compile/internal/syntax
----------------------------------------------------
file: src/cmd/compile/internal/syntax/branches.go
lout: invalid (= new)
# cmd/internal/gcprog
----------------------------------------------------
file: src/cmd/internal/gcprog/gcprog.go
lout: 
# cmd/cgo
----------------------------------------------------
file: src/cmd/cgo/ast.go
lout: debugDefine (= CALLFUNC), debugGcc (= CALLFUNC), nameToC (= MAPLIT), typedef (= MAKEMAP), goIdent (= MAKEMAP), unionWithPointer (= MAKEMAP), dwarfToName (= MAPLIT), jniTypes (= MAPLIT), ptrSizeMap (= MAPLIT), intSizeMap (= MAPLIT), fset (= CALLFUNC), dynobj (= CALLFUNC), dynout (= CALLFUNC), dynpackage (= CALLFUNC), dynlinker (= CALLFUNC), godefs (= CALLFUNC), srcDir (= CALLFUNC), objDir (= CALLFUNC), importPath (= CALLFUNC), exportHeader (= CALLFUNC), gccgo (= CALLFUNC), gccgoprefix (= CALLFUNC), gccgopkgpath (= CALLFUNC), importRuntimeCgo (= CALLFUNC), importSyscall (= CALLFUNC), isBuiltin (= MAPLIT), goTypes (= MAPLIT), builtinDefs (= MAPLIT)
# encoding/json
----------------------------------------------------
file: src/encoding/json/decode.go
lout: textUnmarshalerType (= CALLINTER), numberType (= CALLFUNC), marshalerType (= CALLINTER), textMarshalerType (= CALLINTER), float32Encoder (= CALLPART), float64Encoder (= CALLPART)
# net/url
----------------------------------------------------
file: src/net/url/url.go
lout: 
# internal/goroot
----------------------------------------------------
file: src/internal/goroot/gc.go
lout: 
# compress/gzip
----------------------------------------------------
file: src/compress/gzip/gunzip.go
lout: ErrChecksum (= CALLFUNC), ErrHeader (= CALLFUNC), le (= NAME)
# runtime/pprof
----------------------------------------------------
file: src/runtime/pprof/elf.go
lout: errBadELF (= CALLFUNC), errNoBuildID (= CALLFUNC)
# runtime/trace
----------------------------------------------------
file: src/runtime/trace/annotation.go
lout: 
# text/template/parse
----------------------------------------------------
file: src/text/template/parse/lex.go
lout: key (= MAPLIT)
# cmd/link/internal/sym
----------------------------------------------------
file: src/cmd/link/internal/sym/attribute.go
lout: RelROMap (= MAPLIT)
# cmd/link/internal/loadelf
----------------------------------------------------
file: src/cmd/link/internal/loadelf/ldelf.go
lout: 
# cmd/link/internal/loadmacho
----------------------------------------------------
file: src/cmd/link/internal/loadmacho/ldmacho.go
lout: 
# cmd/link/internal/loadpe
----------------------------------------------------
file: src/cmd/link/internal/loadpe/ldpe.go
lout: 
# cmd/link/internal/loadxcoff
----------------------------------------------------
file: src/cmd/link/internal/loadxcoff/ldxcoff.go
lout: 
# cmd/link/internal/objfile
----------------------------------------------------
file: src/cmd/link/internal/objfile/objfile.go
lout: 
# text/template
----------------------------------------------------
file: src/text/template/doc.go
lout: maxExecDepth (= CALLFUNC), missingVal (= CALLFUNC), errorType (= CALLINTER), fmtStringerType (= CALLINTER), reflectValueType (= CALLINTER), errBadComparisonType (= CALLFUNC), errNoComparison (= CALLFUNC), errBadComparison (= CALLFUNC), builtins (= MAPLIT), builtinFuncs (= CALLFUNC)
# go/doc
----------------------------------------------------
file: src/go/doc/comment.go
lout: inTest (= &&), matchRx (= CALLFUNC), nonAlphaNumRx (= CALLFUNC), outputPrefix (= CALLFUNC), underscore (= CALLFUNC), noteMarkerRx (= CALLFUNC), noteCommentRx (= CALLFUNC), predeclaredTypes (= MAPLIT), predeclaredFuncs (= MAPLIT), predeclaredConstants (= MAPLIT)
# go/build
----------------------------------------------------
file: src/go/build/build.go
lout: cgoEnabled (= MAPLIT), Default (= CALLFUNC), errNoModules (= CALLFUNC), knownOS (= MAKEMAP), knownArch (= MAKEMAP), ToolDir (= CALLFUNC), errSyntax (= CALLFUNC), errNUL (= CALLFUNC)
# cmd/link/internal/ld
----------------------------------------------------
file: src/cmd/link/internal/ld/ar.go
lout: strdata (= MAKEMAP), seenlib (= MAKEMAP), flagBuildid (= CALLFUNC), flagOutfile (= CALLFUNC), flagPluginPath (= CALLFUNC), flagInstallSuffix (= CALLFUNC), flagDumpDep (= CALLFUNC), flagRace (= CALLFUNC), flagMsan (= CALLFUNC), flagFieldTrack (= CALLFUNC), flagLibGCC (= CALLFUNC), flagTmpdir (= CALLFUNC), flagExtld (= CALLFUNC), flagExtldflags (= CALLFUNC), flagExtar (= CALLFUNC), flagA (= CALLFUNC), FlagC (= CALLFUNC), FlagD (= CALLFUNC), flagF (= CALLFUNC), flagG (= CALLFUNC), flagH (= CALLFUNC), flagN (= CALLFUNC), FlagS (= CALLFUNC), flagU (= CALLFUNC), FlagW (= CALLFUNC), flagInterpreter (= CALLFUNC), FlagDebugTramp (= CALLFUNC), FlagRound (= CALLFUNC), FlagTextAddr (= CALLFUNC), FlagDataAddr (= CALLFUNC), flagEntrySymbol (= CALLFUNC), cpuprofile (= CALLFUNC), memprofile (= CALLFUNC), memprofilerate (= CALLFUNC), start (= CALLFUNC), currDwscnoff (= MAKEMAP)
# cmd/link/internal/arm64
----------------------------------------------------
file: src/cmd/link/internal/arm64/asm.go
lout: 
# cmd/link/internal/amd64
----------------------------------------------------
file: src/cmd/link/internal/amd64/asm.go
lout: 
# cmd/link/internal/arm
----------------------------------------------------
file: src/cmd/link/internal/arm/asm.go
lout: 
# cmd/link/internal/mips
----------------------------------------------------
file: src/cmd/link/internal/mips/asm.go
lout: 
# cmd/link/internal/mips64
----------------------------------------------------
file: src/cmd/link/internal/mips64/asm.go
lout: 
# cmd/link/internal/wasm
----------------------------------------------------
file: src/cmd/link/internal/wasm/asm.go
lout: wasmFuncTypes (= MAPLIT), nameRegexp (= CALLFUNC)
# cmd/link/internal/s390x
----------------------------------------------------
file: src/cmd/link/internal/s390x/asm.go
lout: 
# cmd/link/internal/ppc64
----------------------------------------------------
file: src/cmd/link/internal/ppc64/asm.go
lout: 
# cmd/link/internal/x86
----------------------------------------------------
file: src/cmd/link/internal/x86/asm.go
lout: 
# cmd/link
----------------------------------------------------
file: src/cmd/link/doc.go
lout: 
# cmd/compile/internal/ssa
----------------------------------------------------
file: src/cmd/compile/internal/ssa/biasedsparsemap.go
lout: opMax (= MAPLIT), opUMax (= MAPLIT), opMin (= MAPLIT), domainRelationTable (= MAPLIT), ctzNonZeroOp (= MAPLIT), mostNegativeDividend (= MAPLIT), opCmpLoadMap (= MAPLIT), passes (= ==)
# cmd/compile/internal/gc
----------------------------------------------------
file: src/cmd/compile/internal/gc/alg.go
lout: numImport (= MAKEMAP), sharedProgArray (= new), declImporter (= MAPLIT), inlineImporter (= MAPLIT), importMap (= MAPLIT), goVersionRE (= CALLFUNC), allowedStdPragmas (= MAPLIT), prealloc (= MAPLIT), signatset (= MAKEMAP), typepkg (= CALLFUNC), inittemps (= MAKEMAP), opToSSA (= MAPLIT), fpConvOpToSSA (= MAPLIT), fpConvOpToSSA32 (= MAPLIT), uint64fpConvOpToSSA (= MAPLIT), shiftOpToSSA (= MAPLIT), dotlist (= MAKESLICE), dotField (= MAPLIT), mapaccess1 (= CALLFUNC), mapaccess2 (= CALLFUNC), mapassign (= CALLFUNC), mapdelete (= CALLFUNC)
# cmd/compile/internal/mips
----------------------------------------------------
file: src/cmd/compile/internal/mips/galign.go
lout: blockJump (= MAPLIT)
# cmd/compile/internal/arm64
----------------------------------------------------
file: src/cmd/compile/internal/arm64/galign.go
lout: darwin (= ==), condBits (= MAPLIT), blockJump (= MAPLIT)
# cmd/compile/internal/arm
----------------------------------------------------
file: src/cmd/compile/internal/arm/galign.go
lout: condBits (= MAPLIT), blockJump (= MAPLIT)
# cmd/compile/internal/amd64
----------------------------------------------------
file: src/cmd/compile/internal/amd64/galign.go
lout: isPlan9 (= ==)
# cmd/compile/internal/mips64
----------------------------------------------------
file: src/cmd/compile/internal/mips64/galign.go
lout: blockJump (= MAPLIT)
# cmd/compile/internal/wasm
----------------------------------------------------
file: src/cmd/compile/internal/wasm/ssa.go
lout: 
# cmd/compile/internal/ppc64
----------------------------------------------------
file: src/cmd/compile/internal/ppc64/galign.go
lout: iselOps (= MAPLIT)
# cmd/compile/internal/s390x
----------------------------------------------------
file: src/cmd/compile/internal/s390x/galign.go
lout: 
# cmd/compile/internal/x86
----------------------------------------------------
file: src/cmd/compile/internal/x86/387.go
lout: 
# cmd/compile
----------------------------------------------------
file: src/cmd/compile/doc.go
lout: archInits (= MAPLIT)
Building packages and commands for darwin/amd64.
# container/list
----------------------------------------------------
file: src/container/list/list.go
lout: 
# container/ring
----------------------------------------------------
file: src/container/ring/ring.go
lout: 
# compress/bzip2
----------------------------------------------------
file: src/compress/bzip2/bit_reader.go
lout: 
# cmd/internal/goobj
----------------------------------------------------
file: src/cmd/internal/goobj/read.go
lout: errCorruptArchive (= CALLFUNC), errTruncatedArchive (= CALLFUNC), errCorruptObject (= CALLFUNC), errNotObject (= CALLFUNC)
# debug/plan9obj
----------------------------------------------------
file: src/debug/plan9obj/file.go
lout: 
# debug/gosym
----------------------------------------------------
file: src/debug/gosym/pclntab.go
lout: 
# cmd/vendor/golang.org/x/arch/ppc64/ppc64asm
----------------------------------------------------
file: src/cmd/vendor/golang.org/x/arch/ppc64/ppc64asm/decode.go
lout: errShort (= CALLFUNC), errUnknown (= CALLFUNC), revCondMap (= MAPLIT), plan9OpMap (= MAPLIT)
# cmd/vendor/golang.org/x/arch/arm/armasm
----------------------------------------------------
file: src/cmd/vendor/golang.org/x/arch/arm/armasm/decode.go
lout: errMode (= CALLFUNC), errShort (= CALLFUNC), errUnknown (= CALLFUNC), saveDot (= CALLFUNC)
# archive/zip
----------------------------------------------------
file: src/archive/zip/reader.go
lout: ErrFormat (= CALLFUNC), ErrAlgorithm (= CALLFUNC), ErrChecksum (= CALLFUNC), errLongName (= CALLFUNC), errLongExtra (= CALLFUNC)
# compress/lzw
----------------------------------------------------
file: src/compress/lzw/reader.go
lout: errClosed (= CALLFUNC), errOutOfCodes (= CALLFUNC)
# crypto/internal/subtle
----------------------------------------------------
file: src/crypto/internal/subtle/aliasing.go
lout: 
# crypto/subtle
----------------------------------------------------
file: src/crypto/subtle/constant_time.go
lout: 
# cmd/vendor/golang.org/x/arch/x86/x86asm
----------------------------------------------------
file: src/cmd/vendor/golang.org/x/arch/x86/x86asm/decode.go
lout: ErrInvalidMode (= CALLFUNC), ErrTruncated (= CALLFUNC), ErrUnrecognized (= CALLFUNC), errInternal (= CALLFUNC), gnuOp (= MAPLIT), prefixNames (= MAPLIT), intelOp (= MAPLIT)
# crypto/internal/randutil
----------------------------------------------------
file: src/crypto/internal/randutil/randutil.go
lout: 
# crypto/cipher
----------------------------------------------------
file: src/crypto/cipher/cbc.go
lout: errOpen (= CALLFUNC)
# crypto/des
----------------------------------------------------
file: src/crypto/des/block.go
lout: 
# crypto/dsa
----------------------------------------------------
file: src/crypto/dsa/dsa.go
lout: ErrInvalidPublicKey (= CALLFUNC)
# crypto/aes
----------------------------------------------------
file: src/crypto/aes/aes_gcm.go
lout: errOpen (= CALLFUNC), supportsAES (= ||), supportsGFMUL (= ||)
# cmd/vendor/golang.org/x/arch/arm64/arm64asm
----------------------------------------------------
file: src/cmd/vendor/golang.org/x/arch/arm64/arm64asm/arg.go
lout: errShort (= CALLFUNC), errUnknown (= CALLFUNC), noSuffixOpSet (= CALLFUNC)
# crypto/sha512
----------------------------------------------------
file: src/crypto/sha512/sha512.go
lout: useAVX2 (= &&)
# crypto/elliptic
----------------------------------------------------
file: src/crypto/elliptic/elliptic.go
lout: 
# crypto/hmac
----------------------------------------------------
file: src/crypto/hmac/hmac.go
lout: 
# cmd/internal/objfile
----------------------------------------------------
file: src/cmd/internal/objfile/disasm.go
lout: disasms (= MAPLIT), byteOrders (= MAPLIT), validSymType (= MAPLIT)
# crypto/rand
----------------------------------------------------
file: src/crypto/rand/eagain.go
lout: smallPrimesProduct (= CALLMETH)
# crypto/rc4
----------------------------------------------------
file: src/crypto/rc4/rc4.go
lout: 
# cmd/addr2line
----------------------------------------------------
file: src/cmd/addr2line/main.go
lout: 
# encoding/asn1
----------------------------------------------------
file: src/encoding/asn1/asn1.go
lout: bigOne (= CALLFUNC), bitStringType (= CALLFUNC), objectIdentifierType (= CALLFUNC), enumeratedType (= CALLFUNC), flagType (= CALLFUNC), timeType (= CALLFUNC), rawValueType (= CALLFUNC), rawContentsType (= CALLFUNC), bigIntType (= CALLFUNC)
# crypto/ecdsa
----------------------------------------------------
file: src/crypto/ecdsa/ecdsa.go
lout: one (= CALLMETH), errZeroParam (= CALLFUNC)
# crypto/x509/pkix
----------------------------------------------------
file: src/crypto/x509/pkix/pkix.go
lout: attributeTypeNames (= MAPLIT)
# crypto/rsa
----------------------------------------------------
file: src/crypto/rsa/pkcs1v15.go
lout: hashPrefixes (= MAPLIT), bigZero (= CALLFUNC), bigOne (= CALLFUNC), errPublicModulus (= CALLFUNC), errPublicExponentSmall (= CALLFUNC), errPublicExponentLarge (= CALLFUNC), ErrMessageTooLong (= CALLFUNC), ErrDecryption (= CALLFUNC), ErrVerification (= CALLFUNC)
# vendor/golang_org/x/crypto/cryptobyte/asn1
----------------------------------------------------
file: src/vendor/golang_org/x/crypto/cryptobyte/asn1/asn1.go
lout: 
# encoding/pem
----------------------------------------------------
file: src/encoding/pem/pem.go
lout: 
# vendor/golang_org/x/crypto/cryptobyte
----------------------------------------------------
file: src/vendor/golang_org/x/crypto/cryptobyte/asn1.go
lout: bigIntType (= CALLINTER), bigOne (= CALLFUNC)
# vendor/golang_org/x/net/dns/dnsmessage
----------------------------------------------------
file: src/vendor/golang_org/x/net/dns/dnsmessage/message.go
lout: ErrNotStarted (= CALLFUNC), ErrSectionDone (= CALLFUNC), errBaseLen (= CALLFUNC), errCalcLen (= CALLFUNC), errReserved (= CALLFUNC), errTooManyPtr (= CALLFUNC), errInvalidPtr (= CALLFUNC), errNilResouceBody (= CALLFUNC), errResourceLen (= CALLFUNC), errSegTooLong (= CALLFUNC), errZeroSegLen (= CALLFUNC), errResTooLong (= CALLFUNC), errTooManyQuestions (= CALLFUNC), errTooManyAnswers (= CALLFUNC), errTooManyAuthorities (= CALLFUNC), errTooManyAdditionals (= CALLFUNC), errNonCanonicalName (= CALLFUNC), errStringTooLong (= CALLFUNC), errCompressedSRV (= CALLFUNC), sectionNames (= MAPLIT)
# internal/nettrace
----------------------------------------------------
file: src/internal/nettrace/nettrace.go
lout: 
# internal/singleflight
----------------------------------------------------
file: src/internal/singleflight/singleflight.go
lout: 
# vendor/golang_org/x/net/route
----------------------------------------------------
file: src/vendor/golang_org/x/net/route/address.go
lout: errUnsupportedMessage (= CALLFUNC), errMessageMismatch (= CALLFUNC), errMessageTooShort (= CALLFUNC), errInvalidMessage (= CALLFUNC), errInvalidAddr (= CALLFUNC), errShortBuffer (= CALLFUNC)
# vendor/golang_org/x/crypto/internal/chacha20
----------------------------------------------------
file: src/vendor/golang_org/x/crypto/internal/chacha20/chacha_generic.go
lout: 
# vendor/golang_org/x/crypto/poly1305
----------------------------------------------------
file: src/vendor/golang_org/x/crypto/poly1305/poly1305.go
lout: 
# vendor/golang_org/x/crypto/curve25519
----------------------------------------------------
file: src/vendor/golang_org/x/crypto/curve25519/doc.go
lout: 
# vendor/golang_org/x/crypto/hkdf
----------------------------------------------------
file: src/vendor/golang_org/x/crypto/hkdf/hkdf.go
lout: 
# vendor/golang_org/x/crypto/chacha20poly1305
----------------------------------------------------
file: src/vendor/golang_org/x/crypto/chacha20poly1305/chacha20poly1305.go
lout: errOpen (= CALLFUNC), useASM (= DOT), useAVX2 (= &&)
# encoding/ascii85
----------------------------------------------------
file: src/encoding/ascii85/ascii85.go
lout: 
# encoding/base32
----------------------------------------------------
file: src/encoding/base32/base32.go
lout: StdEncoding (= CALLFUNC), HexEncoding (= CALLFUNC)
# database/sql/driver
----------------------------------------------------
file: src/database/sql/driver/driver.go
lout: ErrSkip (= CALLFUNC), ErrBadConn (= CALLFUNC), ErrRemoveArgument (= CALLFUNC), valuerReflectType (= CALLINTER)
# encoding/csv
----------------------------------------------------
file: src/encoding/csv/reader.go
lout: ErrTrailingComma (= CALLFUNC), ErrBareQuote (= CALLFUNC), ErrQuote (= CALLFUNC), ErrFieldCount (= CALLFUNC), errInvalidDelim (= CALLFUNC)
# runtime/cgo
----------------------------------------------------
file: src/runtime/cgo/callbacks.go
lout: 
# database/sql
----------------------------------------------------
file: src/database/sql/convert.go
lout: errNilPtr (= CALLFUNC), valuerReflectType (= CALLINTER), errLevelNotSupported (= CALLFUNC), drivers (= MAKEMAP), ErrNoRows (= CALLFUNC), errDBClosed (= CALLFUNC), ErrConnDone (= CALLFUNC), ErrTxDone (= CALLFUNC), errRowsClosed (= CALLFUNC), errNoRows (= CALLFUNC)
# encoding/gob
----------------------------------------------------
file: src/encoding/gob/dec_helpers.go
lout: errBadUint (= CALLFUNC), decArrayHelper (= MAPLIT), decSliceHelper (= MAPLIT), errBadType (= CALLFUNC), errRange (= CALLFUNC), types (= MAKEMAP), idToType (= MAKEMAP), gobEncoderInterfaceType (= CALLINTER), binaryMarshalerInterfaceType (= CALLINTER), gobDecoderInterfaceType (= CALLINTER), binaryUnmarshalerInterfaceType (= CALLINTER), tBool (= CALLFUNC), tInt (= CALLFUNC), tUint (= CALLFUNC), tFloat (= CALLFUNC), tBytes (= CALLFUNC), tString (= CALLFUNC), tComplex (= CALLFUNC), decIgnoreOpMap (= MAPLIT), emptyStructType (= CALLFUNC), errBadCount (= CALLFUNC), encArrayHelper (= MAPLIT), encSliceHelper (= MAPLIT), spaceForLength (= MAKESLICE), textMarshalerInterfaceType (= CALLINTER), textUnmarshalerInterfaceType (= CALLINTER), tInterface (= CALLFUNC), tReserved7 (= CALLFUNC), tReserved6 (= CALLFUNC), tReserved5 (= CALLFUNC), tReserved4 (= CALLFUNC), tReserved3 (= CALLFUNC), tReserved2 (= CALLFUNC), tReserved1 (= CALLFUNC), tWireType (= DOTPTR)
# vendor/golang_org/x/text/transform
----------------------------------------------------
file: src/vendor/golang_org/x/text/transform/transform.go
lout: ErrShortDst (= CALLFUNC), ErrShortSrc (= CALLFUNC), ErrEndOfSpan (= CALLFUNC), errInconsistentByteCount (= CALLFUNC), errShortInternal (= CALLFUNC)
# vendor/golang_org/x/text/unicode/bidi
----------------------------------------------------
file: src/vendor/golang_org/x/text/unicode/bidi/bidi.go
lout: trie (= CALLFUNC), controlToClass (= MAPLIT)
# vendor/golang_org/x/text/secure/bidirule
----------------------------------------------------
file: src/vendor/golang_org/x/text/secure/bidirule/bidirule.go
lout: ErrInvalid (= CALLFUNC)
# encoding/xml
----------------------------------------------------
file: src/encoding/xml/marshal.go
lout: marshalerType (= CALLINTER), marshalerAttrType (= CALLINTER), textMarshalerType (= CALLINTER), attrType (= CALLFUNC), unmarshalerType (= CALLINTER), unmarshalerAttrType (= CALLINTER), textUnmarshalerType (= CALLINTER), nameType (= CALLFUNC), errRawToken (= CALLFUNC), entity (= MAPLIT), htmlEntity (= MAPLIT), HTMLEntity (= NAME)
# vendor/golang_org/x/net/http2/hpack
----------------------------------------------------
file: src/vendor/golang_org/x/net/http2/hpack/encode.go
lout: ErrStringLength (= CALLFUNC), errNeedMore (= CALLFUNC), errVarintOverflow (= CALLFUNC), ErrInvalidHuffman (= CALLFUNC), staticTable (= CALLFUNC)
# mime
----------------------------------------------------
file: src/mime/encodedword.go
lout: errInvalidWord (= CALLFUNC), maxBase64Len (= CALLMETH), ErrInvalidMediaParameter (= CALLFUNC), builtinTypesLower (= MAPLIT)
# mime/quotedprintable
----------------------------------------------------
file: src/mime/quotedprintable/reader.go
lout: 
# net/http/internal
----------------------------------------------------
file: src/net/http/internal/chunked.go
lout: ErrLineTooLong (= CALLFUNC)
# vendor/golang_org/x/text/unicode/norm
----------------------------------------------------
file: src/vendor/golang_org/x/text/unicode/norm/composition.go
lout: nfcSparse (= SLICEARR), nfcSparse (= SLICE), nfcData (= CALLFUNC), recompMap (= MAPLIT), nfkcSparse (= SLICEARR), nfkcSparse (= SLICE), nfkcData (= CALLFUNC), statictmp_40 (= NAME), statictmp_40 (= NAME)
# go/constant
----------------------------------------------------
file: src/go/constant/value.go
lout: floatVal0 (= CALLFUNC)
# go/format
----------------------------------------------------
file: src/go/format/format.go
lout: 
# vendor/golang_org/x/net/idna
----------------------------------------------------
file: src/vendor/golang_org/x/net/idna/idna.go
lout: idnaSparse (= SLICEARR), idnaSparse (= SLICE)
# hash/crc64
----------------------------------------------------
file: src/hash/crc64/crc64.go
lout: 
# hash/fnv
----------------------------------------------------
file: src/hash/fnv/fnv.go
lout: 
# html/template
----------------------------------------------------
file: src/html/template/attr.go
lout: attrTypeMap (= MAPLIT), errorType (= CALLINTER), fmtStringerType (= CALLINTER), elementNameMap (= MAPLIT), regexpPrecederKeywords (= MAPLIT), jsonMarshalType (= CALLINTER), funcMap (= MAPLIT), predefinedEscapers (= MAPLIT), equivEscapers (= MAPLIT), redundantFuncs (= MAPLIT), escapeOK (= CALLFUNC)
# image/color
----------------------------------------------------
file: src/image/color/color.go
lout: RGBAModel (= CALLFUNC), RGBA64Model (= CALLFUNC), NRGBAModel (= CALLFUNC), NRGBA64Model (= CALLFUNC), AlphaModel (= CALLFUNC), Alpha16Model (= CALLFUNC), GrayModel (= CALLFUNC), Gray16Model (= CALLFUNC), YCbCrModel (= CALLFUNC), NYCbCrAModel (= CALLFUNC), CMYKModel (= CALLFUNC)
# image
----------------------------------------------------
file: src/image/format.go
lout: ErrFormat (= CALLFUNC), Black (= CALLFUNC), White (= CALLFUNC), Transparent (= CALLFUNC), Opaque (= CALLFUNC)
# image/color/palette
----------------------------------------------------
file: src/image/color/palette/generate.go
lout: 
# image/internal/imageutil
----------------------------------------------------
file: src/image/internal/imageutil/imageutil.go
lout: 
# os/user
----------------------------------------------------
file: src/os/user/lookup.go
lout: 
# image/draw
----------------------------------------------------
file: src/image/draw/draw.go
lout: 
# image/gif
----------------------------------------------------
file: src/image/gif/reader.go
lout: errNotEnough (= CALLFUNC), errTooMuch (= CALLFUNC), errBadPixel (= CALLFUNC)
# image/jpeg
----------------------------------------------------
file: src/image/jpeg/fdct.go
lout: 
# archive/tar
----------------------------------------------------
file: src/archive/tar/common.go
lout: ErrHeader (= CALLFUNC), ErrWriteTooLong (= CALLFUNC), ErrFieldTooLong (= CALLFUNC), ErrWriteAfterClose (= CALLFUNC), errMissData (= CALLFUNC), errUnrefData (= CALLFUNC), errWriteHole (= CALLFUNC), basicKeys (= MAPLIT), formatNames (= MAPLIT)
# index/suffixarray
----------------------------------------------------
file: src/index/suffixarray/qsufsort.go
lout: 
# internal/syscall/windows
----------------------------------------------------
file: src/internal/syscall/windows/mksyscall.go
lout: 
# internal/syscall/windows/registry
----------------------------------------------------
file: src/internal/syscall/windows/registry/mksyscall.go
lout: 
# internal/syscall/windows/sysdll
----------------------------------------------------
file: src/internal/syscall/windows/sysdll/sysdll.go
lout: IsSystemDLL (= MAPLIT)
# image/png
----------------------------------------------------
file: src/image/png/paeth.go
lout: 
# testing
----------------------------------------------------
file: src/testing/allocs.go
lout: matchBenchmarks (= CALLFUNC), benchmarkMemory (= CALLFUNC), short (= CALLFUNC), failFast (= CALLFUNC), outputDir (= CALLFUNC), chatty (= CALLFUNC), count (= CALLFUNC), coverProfile (= CALLFUNC), matchList (= CALLFUNC), match (= CALLFUNC), memProfile (= CALLFUNC), memProfileRate (= CALLFUNC), cpuProfile (= CALLFUNC), blockProfile (= CALLFUNC), blockProfileRate (= CALLFUNC), mutexProfile (= CALLFUNC), mutexProfileFraction (= CALLFUNC), traceFile (= CALLFUNC), timeout (= CALLFUNC), cpuListStr (= CALLFUNC), parallel (= CALLFUNC), testlog (= CALLFUNC), errNilPanicOrGoexit (= CALLFUNC), errMain (= CALLFUNC)
# internal/testenv
----------------------------------------------------
file: src/internal/testenv/testenv.go
lout: flaky (= CALLFUNC)
# math/cmplx
----------------------------------------------------
file: src/math/cmplx/abs.go
lout: 
# net/internal/socktest
----------------------------------------------------
file: src/net/internal/socktest/switch.go
lout: 
# os/signal
----------------------------------------------------
file: src/os/signal/doc.go
lout: 
# internal/trace
----------------------------------------------------
file: src/internal/trace/gc.go
lout: ErrTimeOrder (= CALLFUNC)
# go/types
----------------------------------------------------
file: src/go/types/api.go
lout: indir (= CALLFUNC), unaryOpPredicates (= MAPLIT), binaryOpPredicates (= MAPLIT), gcArchSizes (= MAPLIT), stdSizes (= CALLFUNC), markComplete (= MAKESLICE), emptyInterface (= NAME), predeclaredConsts (= CALLFUNC), predeclaredConsts (= CALLFUNC), predeclaredConsts (= CALLFUNC)
# go/internal/gccgoimporter
----------------------------------------------------
file: src/go/internal/gccgoimporter/ar.go
lout: reserved (= new)
# go/internal/gcimporter
----------------------------------------------------
file: src/go/internal/gcimporter/bimport.go
lout: statictmp_25 (= INDEX), statictmp_25 (= INDEX), statictmp_25 (= INDEX), statictmp_25 (= INDEX), statictmp_25 (= INDEX), statictmp_25 (= INDEX), statictmp_25 (= INDEX), statictmp_25 (= INDEX), statictmp_25 (= INDEX), statictmp_25 (= INDEX), statictmp_25 (= INDEX), statictmp_25 (= INDEX), statictmp_25 (= INDEX), statictmp_25 (= INDEX), statictmp_25 (= INDEX), statictmp_25 (= INDEX), statictmp_25 (= INDEX), statictmp_25 (= CALLINTER), statictmp_25 (= CALLINTER), statictmp_25 (= CALLINTER), statictmp_25 (= INDEX), statictmp_25 (= INDEX), statictmp_25 (= INDEX), statictmp_25 (= INDEX), statictmp_25 (= INDEX), statictmp_25 (= INDEX), statictmp_25 (= INDEX), statictmp_25 (= INDEX), statictmp_25 (= INDEX)
# net
----------------------------------------------------
file: src/net/addrselect.go
lout: statictmp_130 (= CALLFUNC), statictmp_130 (= CALLFUNC), statictmp_130 (= CALLFUNC), statictmp_130 (= CALLFUNC), statictmp_130 (= CALLFUNC), statictmp_130 (= CALLFUNC), statictmp_130 (= CALLFUNC), statictmp_130 (= CALLFUNC), statictmp_130 (= CALLFUNC), errLameReferral (= CALLFUNC), errCannotUnmarshalDNSMessage (= CALLFUNC), errCannotMarshalDNSMessage (= CALLFUNC), errServerMisbehaving (= CALLFUNC), errInvalidDNSResponse (= CALLFUNC), errNoAnswerFromDNSServer (= CALLFUNC), errServerTemporarlyMisbehaving (= CALLFUNC), lookupOrderName (= MAPLIT), errInvalidInterface (= CALLFUNC), errInvalidInterfaceIndex (= CALLFUNC), errInvalidInterfaceName (= CALLFUNC), errNoSuchInterface (= CALLFUNC), errNoSuchMulticastInterface (= CALLFUNC), zoneCache (= MAKEMAP), zoneCache (= MAKEMAP), IPv4bcast (= CALLFUNC), IPv4allsys (= CALLFUNC), IPv4allrouter (= CALLFUNC), IPv4zero (= CALLFUNC), classAMask (= CALLFUNC), classBMask (= CALLFUNC), classCMask (= CALLFUNC), protocols (= MAPLIT), services (= MAPLIT), errNoSuitableAddress (= CALLFUNC), errMissingAddress (= CALLFUNC), errCanceled (= CALLFUNC), ErrWriteToConnected (= CALLFUNC), aLongTimeAgo (= CALLFUNC), errNoSuchHost (= CALLFUNC)
# go/internal/srcimporter
----------------------------------------------------
file: src/go/internal/srcimporter/srcimporter.go
lout: 
# net/textproto
----------------------------------------------------
file: src/net/textproto/header.go
lout: commonHeader (= MAKEMAP)
# os/signal/internal/pty
----------------------------------------------------
file: uild242943900/b183/_cgo_gotypes.go
lout: 
# vendor/golang_org/x/net/http/httpguts
----------------------------------------------------
file: src/vendor/golang_org/x/net/http/httpguts/guts.go
lout: badTrailer (= MAPLIT)
# vendor/golang_org/x/net/http/httpproxy
----------------------------------------------------
file: src/vendor/golang_org/x/net/http/httpproxy/proxy.go
lout: portMap (= MAPLIT)
# go/importer
----------------------------------------------------
file: src/go/importer/importer.go
lout: 
# mime/multipart
----------------------------------------------------
file: src/mime/multipart/formdata.go
lout: ErrMessageTooLarge (= CALLFUNC), emptyParams (= MAKEMAP), quoteEscaper (= CALLFUNC)
# log/syslog
----------------------------------------------------
file: src/log/syslog/doc.go
lout: 
# net/mail
----------------------------------------------------
file: src/net/mail/message.go
lout: ErrHeaderNotPresent (= CALLFUNC)
# plugin
----------------------------------------------------
file: src/plugin/plugin.go
lout: 
# runtime/race
----------------------------------------------------
file: src/runtime/race/doc.go
lout: 
# testing/internal/testdeps
----------------------------------------------------
file: src/testing/internal/testdeps/deps.go
lout: 
# testing/iotest
----------------------------------------------------
file: src/testing/iotest/logger.go
lout: ErrTimeout (= CALLFUNC)
# testing/quick
----------------------------------------------------
file: src/testing/quick/quick.go
lout: defaultMaxCount (= CALLFUNC)
# vendor/golang_org/x/net/internal/nettest
----------------------------------------------------
file: src/vendor/golang_org/x/net/internal/nettest/helper_bsd.go
lout: 
# vendor/golang_org/x/net/nettest
----------------------------------------------------
file: src/vendor/golang_org/x/net/nettest/conntest.go
lout: aLongTimeAgo (= CALLFUNC)
# vendor/golang_org/x/text/secure
----------------------------------------------------
file: src/vendor/golang_org/x/text/secure/doc.go
lout: 
# vendor/golang_org/x/text/unicode
----------------------------------------------------
file: src/vendor/golang_org/x/text/unicode/doc.go
lout: 
# cmd/asm
----------------------------------------------------
file: src/cmd/asm/doc.go
lout: 
# cmd/internal/buildid
----------------------------------------------------
file: src/cmd/internal/buildid/buildid.go
lout: errBuildIDToolchain (= CALLFUNC), errBuildIDMalformed (= CALLFUNC), errBuildIDUnknown (= CALLFUNC)
# cmd/buildid
----------------------------------------------------
file: src/cmd/buildid/buildid.go
lout: wflag (= CALLFUNC)
# cmd/api
----------------------------------------------------
file: src/cmd/api/goapi.go
lout: checkFile (= CALLFUNC), allowNew (= CALLFUNC), exceptFile (= CALLFUNC), nextFile (= CALLFUNC), verbose (= CALLFUNC), forceCtx (= CALLFUNC), internalPkg (= CALLFUNC), spaceParensRx (= CALLFUNC), fset (= CALLFUNC), parsedFileCache (= MAKEMAP), pkgCache (= MAPLIT), pkgTags (= MAPLIT)
# runtime/pprof/internal/profile
----------------------------------------------------
file: src/runtime/pprof/internal/profile/encode.go
lout: countStartRE (= CALLFUNC), countRE (= CALLFUNC), heapHeaderRE (= CALLFUNC), heapSampleRE (= CALLFUNC), contentionSampleRE (= CALLFUNC), hexNumberRE (= CALLFUNC), growthHeaderRE (= CALLFUNC), fragmentationHeaderRE (= CALLFUNC), threadzStartRE (= CALLFUNC), threadStartRE (= CALLFUNC), procMapsRE (= CALLFUNC), briefMapsRE (= CALLFUNC), allocRxStr (= CALLFUNC), allocSkipRxStr (= CALLFUNC), cpuProfilerRxStr (= CALLFUNC), lockRxStr (= CALLFUNC), errUnrecognized (= CALLFUNC), errMalformed (= CALLFUNC), libRx (= CALLFUNC)
# cmd/cgo
----------------------------------------------------
file: src/cmd/cgo/ast.go
lout: debugDefine (= CALLFUNC), debugGcc (= CALLFUNC), nameToC (= MAPLIT), typedef (= MAKEMAP), goIdent (= MAKEMAP), unionWithPointer (= MAKEMAP), dwarfToName (= MAPLIT), jniTypes (= MAPLIT), ptrSizeMap (= MAPLIT), intSizeMap (= MAPLIT), fset (= CALLFUNC), dynobj (= CALLFUNC), dynout (= CALLFUNC), dynpackage (= CALLFUNC), dynlinker (= CALLFUNC), godefs (= CALLFUNC), srcDir (= CALLFUNC), objDir (= CALLFUNC), importPath (= CALLFUNC), exportHeader (= CALLFUNC), gccgo (= CALLFUNC), gccgoprefix (= CALLFUNC), gccgopkgpath (= CALLFUNC), importRuntimeCgo (= CALLFUNC), importSyscall (= CALLFUNC), isBuiltin (= MAPLIT), goTypes (= MAPLIT), builtinDefs (= MAPLIT)
# cmd/compile
----------------------------------------------------
file: src/cmd/compile/doc.go
lout: archInits (= MAPLIT)
# cmd/compile/internal/test
----------------------------------------------------
file: src/cmd/compile/internal/test/test.go
lout: 
# cmd/internal/browser
----------------------------------------------------
file: src/cmd/internal/browser/browser.go
lout: 
# cmd/cover
----------------------------------------------------
file: src/cmd/cover/cover.go
lout: mode (= CALLFUNC), varVar (= CALLFUNC), output (= CALLFUNC), htmlOut (= CALLFUNC), funcOut (= CALLFUNC), htmlTemplate (= CALLFUNC), lineRe (= CALLFUNC)
# cmd/doc
----------------------------------------------------
file: src/cmd/doc/dirs.go
lout: buildCtx (= NAME)
# cmd/dist
----------------------------------------------------
file: src/cmd/dist/build.go
lout: dying (= MAKECHAN), cgoEnabled (= MAPLIT), installed (= MAKEMAP), timeLogEnabled (= !=), ssaRewriteFileSubstring (= CALLFUNC), errSyntax (= CALLFUNC), errNUL (= CALLFUNC), bgwork (= MAKECHAN), commands (= MAPLIT)
# cmd/fix
----------------------------------------------------
file: src/cmd/fix/cftype.go
lout: fset (= CALLFUNC), posType (= CALLFUNC), allowedRewrites (= CALLFUNC), forceRewrites (= CALLFUNC), doDiff (= CALLFUNC)
# cmd/go/internal/cfg
----------------------------------------------------
file: src/cmd/go/internal/cfg/cfg.go
lout: BuildContext (= CALLFUNC), BuildP (= CALLFUNC), Goarch (= DOT), Goos (= DOT), Gopath (= CALLFUNC), GOROOT (= CALLFUNC), GOBIN (= CALLFUNC), GOROOTbin (= CALLFUNC), GOROOTpkg (= CALLFUNC), GOROOTsrc (= CALLFUNC), GOROOT_FINAL (= CALLFUNC), GOARM (= CALLFUNC), GO386 (= NAME), GOMIPS (= NAME), GOMIPS64 (= NAME), OSArchSupportsCgo (= MAPLIT)
# cmd/go/internal/str
----------------------------------------------------
file: src/cmd/go/internal/str/path.go
lout: 
# cmd/go/internal/cache
----------------------------------------------------
file: src/cmd/go/internal/cache/cache.go
lout: errMissing (= CALLFUNC), hashSalt (= STR2BYTES)
# cmd/go/internal/base
----------------------------------------------------
file: src/cmd/go/internal/base/base.go
lout: knownFlag (= MAKEMAP), Cwd (= CALLFUNC), Interrupted (= MAKECHAN), statictmp_1 (= NAME), ToolIsWindows (= ==), ToolDir (= NAME)
# cmd/go/internal/modinfo
----------------------------------------------------
file: src/cmd/go/internal/modinfo/info.go
lout: 
# cmd/go/internal/search
----------------------------------------------------
file: src/cmd/go/internal/search/search.go
lout: 
# cmd/go/internal/imports
----------------------------------------------------
file: src/cmd/go/internal/imports/build.go
lout: KnownOS (= MAKEMAP), KnownArch (= MAKEMAP), errSyntax (= CALLFUNC), errNUL (= CALLFUNC), ErrNoGo (= CALLFUNC)
# cmd/go/internal/dirhash
----------------------------------------------------
file: src/cmd/go/internal/dirhash/hash.go
lout: 
# cmd/go/internal/par
----------------------------------------------------
file: src/cmd/go/internal/par/work.go
lout: 
# cmd/go/internal/semver
----------------------------------------------------
file: src/cmd/go/internal/semver/semver.go
lout: 
# cmd/go/internal/module
----------------------------------------------------
file: src/cmd/go/internal/module/module.go
lout: 
# cmd/go/internal/load
----------------------------------------------------
file: src/cmd/go/internal/load/flag.go
lout: packageCache (= MAPLIT), isDirCache (= MAPLIT), goModPathCache (= MAKEMAP), cgoExclude (= MAPLIT), cgoSyscallExclude (= MAPLIT), foldPath (= MAKEMAP), cmdCache (= MAPLIT), testFileSet (= CALLFUNC), testmainTmpl (= CALLFUNC)
# cmd/go/internal/modfile
----------------------------------------------------
file: src/cmd/go/internal/modfile/gopkgin.go
lout: GoVersionRE (= CALLFUNC)
# cmd/go/internal/modfetch/codehost
----------------------------------------------------
file: src/cmd/go/internal/modfetch/codehost/codehost.go
lout: bashQuoter (= CALLFUNC), vcsCmds (= MAPLIT)
# cmd/go/internal/doc
----------------------------------------------------
file: src/cmd/go/internal/doc/doc.go
lout: 
# cmd/go/internal/mvs
----------------------------------------------------
file: src/cmd/go/internal/mvs/mvs.go
lout: 
# cmd/go/internal/cmdflag
----------------------------------------------------
file: src/cmd/go/internal/cmdflag/flag.go
lout: 
# cmd/go/internal/help
----------------------------------------------------
file: src/cmd/go/internal/help/help.go
lout: documentationTemplate (= +)
# cmd/internal/test2json
----------------------------------------------------
file: src/cmd/internal/test2json/test2json.go
lout: 
# cmd/go/internal/tool
----------------------------------------------------
file: src/cmd/go/internal/tool/tool.go
lout: 
# cmd/go/internal/version
----------------------------------------------------
file: src/cmd/go/internal/version/version.go
lout: 
# cmd/go/internal/txtar
----------------------------------------------------
file: src/cmd/go/internal/txtar/archive.go
lout: 
# cmd/link
----------------------------------------------------
file: src/cmd/link/doc.go
lout: 
# cmd/nm
----------------------------------------------------
file: src/cmd/nm/doc.go
lout: sortOrder (= CALLFUNC), printSize (= CALLFUNC), printType (= CALLFUNC)
# cmd/gofmt
----------------------------------------------------
file: src/cmd/gofmt/doc.go
lout: list (= CALLFUNC), write (= CALLFUNC), rewriteRule (= CALLFUNC), simplifyAST (= CALLFUNC), doDiff (= CALLFUNC), allErrors (= CALLFUNC), cpuprofile (= CALLFUNC), fileSet (= CALLFUNC), objectPtrNil (= CALLFUNC), scopePtrNil (= CALLFUNC), identType (= CALLFUNC), objectPtrType (= CALLFUNC), positionType (= CALLFUNC), callExprType (= CALLFUNC), scopePtrType (= CALLFUNC)
# crypto/x509
----------------------------------------------------
file: src/crypto/x509/cert_pool.go
lout: IncorrectPasswordError (= CALLFUNC), debugExecDarwinRoots (= CALLFUNC), ignoreCN (= CALLFUNC), errNotParsed (= CALLFUNC), ErrUnsupportedAlgorithm (= CALLFUNC)
# cmd/objdump
----------------------------------------------------
file: src/cmd/objdump/main.go
lout: printCode (= CALLFUNC), symregexp (= CALLFUNC)
# cmd/pack
----------------------------------------------------
file: src/cmd/pack/doc.go
lout: stdout (= NAME)
# cmd/go/internal/work
----------------------------------------------------
file: src/cmd/go/internal/work/action.go
lout: runtimeVersion (= CALLFUNC), errPrintedOutput (= CALLFUNC), cgoLine (= CALLFUNC), cgoTypeSigRe (= CALLFUNC), origCC (= CALLFUNC), origCXX (= CALLFUNC), cgoRe (= CALLFUNC), statictmp_172 (= CALLFUNC), statictmp_172 (= CALLFUNC), statictmp_172 (= CALLFUNC), statictmp_172 (= CALLFUNC), statictmp_172 (= CALLFUNC), statictmp_172 (= CALLFUNC), statictmp_172 (= CALLFUNC), statictmp_172 (= CALLFUNC), statictmp_172 (= CALLFUNC), statictmp_172 (= CALLFUNC), statictmp_172 (= CALLFUNC), statictmp_172 (= CALLFUNC), statictmp_172 (= CALLFUNC), statictmp_172 (= CALLFUNC), statictmp_172 (= CALLFUNC), statictmp_172 (= CALLFUNC), statictmp_172 (= CALLFUNC), statictmp_172 (= CALLFUNC), statictmp_172 (= CALLFUNC), statictmp_172 (= CALLFUNC), statictmp_172 (= CALLFUNC), statictmp_172 (= CALLFUNC), statictmp_172 (= CALLFUNC), statictmp_172 (= CALLFUNC), statictmp_172 (= CALLFUNC), statictmp_172 (= CALLFUNC), statictmp_172 (= CALLFUNC), statictmp_172 (= CALLFUNC), statictmp_172 (= CALLFUNC), statictmp_172 (= CALLFUNC), statictmp_172 (= CALLFUNC), statictmp_172 (= CALLFUNC), statictmp_172 (= CALLFUNC), statictmp_172 (= CALLFUNC), statictmp_172 (= CALLFUNC), statictmp_172 (= CALLFUNC), statictmp_172 (= CALLFUNC), statictmp_172 (= CALLFUNC), statictmp_172 (= CALLFUNC), statictmp_172 (= CALLFUNC), statictmp_172 (= CALLFUNC), statictmp_172 (= CALLFUNC), statictmp_172 (= CALLFUNC), statictmp_172 (= CALLFUNC), statictmp_172 (= CALLFUNC), statictmp_172 (= CALLFUNC), statictmp_172 (= CALLFUNC), statictmp_172 (= CALLFUNC), statictmp_172 (= CALLFUNC), statictmp_172 (= CALLFUNC), statictmp_172 (= CALLFUNC), statictmp_172 (= CALLFUNC), statictmp_172 (= CALLFUNC), statictmp_172 (= CALLFUNC), statictmp_172 (= CALLFUNC), statictmp_172 (= CALLFUNC), statictmp_172 (= CALLFUNC), statictmp_172 (= CALLFUNC), statictmp_172 (= CALLFUNC), statictmp_172 (= CALLFUNC), statictmp_172 (= CALLFUNC), statictmp_172 (= CALLFUNC), statictmp_172 (= CALLFUNC), statictmp_172 (= CALLFUNC), statictmp_172 (= CALLFUNC), statictmp_172 (= CALLFUNC), statictmp_172 (= CALLFUNC), statictmp_172 (= CALLFUNC), statictmp_172 (= CALLFUNC), statictmp_172 (= CALLFUNC), statictmp_172 (= CALLFUNC), statictmp_172 (= CALLFUNC), statictmp_172 (= CALLFUNC), statictmp_172 (= CALLFUNC), statictmp_172 (= CALLFUNC), statictmp_172 (= CALLFUNC), statictmp_174 (= CALLFUNC), statictmp_174 (= CALLFUNC), statictmp_174 (= CALLFUNC), statictmp_174 (= CALLFUNC), statictmp_174 (= CALLFUNC), statictmp_174 (= CALLFUNC), statictmp_174 (= CALLFUNC), statictmp_174 (= CALLFUNC), statictmp_174 (= CALLFUNC), statictmp_174 (= CALLFUNC), statictmp_174 (= CALLFUNC), statictmp_174 (= CALLFUNC), statictmp_174 (= CALLFUNC), statictmp_174 (= CALLFUNC), statictmp_174 (= CALLFUNC), statictmp_174 (= CALLFUNC), statictmp_174 (= CALLFUNC), statictmp_174 (= CALLFUNC), statictmp_174 (= CALLFUNC), statictmp_174 (= CALLFUNC), statictmp_174 (= CALLFUNC), statictmp_174 (= CALLFUNC), statictmp_174 (= CALLFUNC), statictmp_174 (= CALLFUNC), statictmp_174 (= CALLFUNC), statictmp_174 (= CALLFUNC), statictmp_174 (= CALLFUNC), statictmp_174 (= CALLFUNC), statictmp_174 (= CALLFUNC), statictmp_174 (= CALLFUNC), statictmp_174 (= CALLFUNC), statictmp_174 (= CALLFUNC), statictmp_174 (= CALLFUNC), statictmp_174 (= CALLFUNC), statictmp_174 (= CALLFUNC), statictmp_174 (= CALLFUNC), statictmp_174 (= CALLFUNC), statictmp_174 (= CALLFUNC), statictmp_174 (= CALLFUNC), statictmp_174 (= CALLFUNC), statictmp_174 (= CALLFUNC), statictmp_174 (= CALLFUNC), statictmp_174 (= CALLFUNC), statictmp_174 (= CALLFUNC), statictmp_174 (= CALLFUNC), statictmp_174 (= CALLFUNC), statictmp_174 (= CALLFUNC), statictmp_174 (= CALLFUNC), statictmp_174 (= CALLFUNC), statictmp_174 (= CALLFUNC), statictmp_174 (= CALLFUNC), statictmp_174 (= CALLFUNC), statictmp_174 (= CALLFUNC), statictmp_174 (= CALLFUNC), statictmp_174 (= CALLFUNC)
# cmd/go/internal/run
----------------------------------------------------
file: src/cmd/go/internal/run/run.go
lout: 
# cmd/vendor/github.com/google/pprof/internal/elfexec
----------------------------------------------------
file: src/cmd/vendor/github.com/google/pprof/internal/elfexec/elfexec.go
lout: 
# cmd/vendor/github.com/google/pprof/profile
----------------------------------------------------
file: src/cmd/vendor/github.com/google/pprof/profile/encode.go
lout: errConcatProfile (= CALLFUNC), attributeRx (= CALLFUNC), javaSampleRx (= CALLFUNC), javaLocationRx (= CALLFUNC), javaLocationFileLineRx (= CALLFUNC), javaLocationPathRx (= CALLFUNC), countStartRE (= CALLFUNC), countRE (= CALLFUNC), heapHeaderRE (= CALLFUNC), heapSampleRE (= CALLFUNC), contentionSampleRE (= CALLFUNC), hexNumberRE (= CALLFUNC), growthHeaderRE (= CALLFUNC), fragmentationHeaderRE (= CALLFUNC), threadzStartRE (= CALLFUNC), threadStartRE (= CALLFUNC), cHexRange (= +), procMapsRE (= CALLFUNC), briefMapsRE (= CALLFUNC), logInfoRE (= CALLFUNC), allocRxStr (= CALLFUNC), allocSkipRxStr (= CALLFUNC), cpuProfilerRxStr (= CALLFUNC), lockRxStr (= CALLFUNC), errUnrecognized (= CALLFUNC), errMalformed (= CALLFUNC), errNoData (= CALLFUNC), libRx (= CALLFUNC), bracketRx (= CALLFUNC)
# cmd/vendor/github.com/google/pprof/internal/measurement
----------------------------------------------------
file: src/cmd/vendor/github.com/google/pprof/internal/measurement/measurement.go
lout: 
# cmd/vendor/github.com/google/pprof/third_party/d3
----------------------------------------------------
file: src/cmd/vendor/github.com/google/pprof/third_party/d3/d3.go
lout: 
# cmd/vendor/github.com/google/pprof/third_party/d3flamegraph
----------------------------------------------------
file: src/cmd/vendor/github.com/google/pprof/third_party/d3flamegraph/d3_flame_graph.go
lout: 
# cmd/vendor/github.com/google/pprof/third_party/svgpan
----------------------------------------------------
file: src/cmd/vendor/github.com/google/pprof/third_party/svgpan/svgpan.go
lout: 
# cmd/vendor/github.com/google/pprof/internal/graph
----------------------------------------------------
file: src/cmd/vendor/github.com/google/pprof/internal/graph/dotgraph.go
lout: javaRegExp (= CALLFUNC), goRegExp (= CALLFUNC), cppRegExp (= CALLFUNC)
# cmd/test2json
----------------------------------------------------
file: src/cmd/test2json/main.go
lout: flagP (= CALLFUNC), flagT (= CALLFUNC)
# crypto/tls
----------------------------------------------------
file: src/crypto/tls/alert.go
lout: alertText (= MAPLIT), errClosed (= CALLFUNC), errShutdown (= CALLFUNC), errEarlyCloseWrite (= CALLFUNC), tls11SignatureSchemesECDSA (= SLICE), tls11SignatureSchemesRSA (= SLICE), errClientKeyExchange (= CALLFUNC), errServerKeyExchange (= CALLFUNC)
# net/http/httptrace
----------------------------------------------------
file: src/net/http/httptrace/trace.go
lout: 
# cmd/vendor/golang.org/x/sys/unix
----------------------------------------------------
file: src/cmd/vendor/golang.org/x/sys/unix/constants.go
lout: statictmp_41 (= MAKEMAP)
# cmd/vendor/github.com/ianlancetaylor/demangle
----------------------------------------------------
file: src/cmd/vendor/github.com/ianlancetaylor/demangle/ast.go
lout: builtinTypeSuffix (= MAPLIT), builtinTypeFloat (= MAPLIT), ErrNotMangledName (= CALLFUNC), operators (= MAPLIT), builtinTypes (= MAPLIT), qualifiers (= MAPLIT), subAST (= MAPLIT), verboseAST (= MAPLIT)
# net/smtp
----------------------------------------------------
file: src/net/smtp/auth.go
lout: 
# cmd/vendor/github.com/google/pprof/internal/proftest
----------------------------------------------------
file: src/cmd/vendor/github.com/google/pprof/internal/proftest/proftest.go
lout: 
# cmd/vendor/golang.org/x/sys/windows
----------------------------------------------------
file: src/cmd/vendor/golang.org/x/sys/windows/mksyscall.go
lout: 
# cmd/vendor/golang.org/x/crypto/ssh/terminal
----------------------------------------------------
file: src/cmd/vendor/golang.org/x/crypto/ssh/terminal/terminal.go
lout: 
# cmd/vendor/golang.org/x/sys/windows/registry
----------------------------------------------------
file: src/cmd/vendor/golang.org/x/sys/windows/registry/mksyscall.go
lout: 
# cmd/vendor/golang.org/x/tools/go/analysis
----------------------------------------------------
file: src/cmd/vendor/golang.org/x/tools/go/analysis/analysis.go
lout: 
# cmd/vendor/golang.org/x/tools/go/types/objectpath
----------------------------------------------------
file: src/cmd/vendor/golang.org/x/tools/go/types/objectpath/objectpath.go
lout: 
# cmd/vendor/golang.org/x/tools/go/analysis/internal/analysisflags
----------------------------------------------------
file: src/cmd/vendor/golang.org/x/tools/go/analysis/internal/analysisflags/flags.go
lout: vetLegacyFlags (= MAPLIT)
# cmd/vendor/golang.org/x/tools/go/analysis/passes/internal/analysisutil
----------------------------------------------------
file: src/cmd/vendor/golang.org/x/tools/go/analysis/passes/internal/analysisutil/util.go
lout: 
# cmd/vendor/golang.org/x/tools/go/analysis/internal/facts
----------------------------------------------------
file: src/cmd/vendor/golang.org/x/tools/go/analysis/internal/facts/facts.go
lout: 
# cmd/vendor/golang.org/x/tools/go/ast/inspector
----------------------------------------------------
file: src/cmd/vendor/golang.org/x/tools/go/ast/inspector/inspector.go
lout: 
# cmd/vendor/golang.org/x/tools/go/analysis/passes/inspect
----------------------------------------------------
file: src/cmd/vendor/golang.org/x/tools/go/analysis/passes/inspect/inspect.go
lout: statictmp_0 (= CALLFUNC)
# cmd/vendor/golang.org/x/tools/go/analysis/passes/buildtag
----------------------------------------------------
file: src/cmd/vendor/golang.org/x/tools/go/analysis/passes/buildtag/buildtag.go
lout: 
# cmd/vendor/golang.org/x/tools/go/analysis/passes/assign
----------------------------------------------------
file: src/cmd/vendor/golang.org/x/tools/go/analysis/passes/assign/assign.go
lout: statictmp_2 (= NAME)
# cmd/vendor/golang.org/x/tools/go/analysis/passes/atomic
----------------------------------------------------
file: src/cmd/vendor/golang.org/x/tools/go/analysis/passes/atomic/atomic.go
lout: statictmp_2 (= NAME)
# cmd/vendor/golang.org/x/tools/go/analysis/passes/bools
----------------------------------------------------
file: src/cmd/vendor/golang.org/x/tools/go/analysis/passes/bools/bools.go
lout: statictmp_2 (= NAME)
# cmd/vendor/golang.org/x/tools/go/analysis/passes/cgocall
----------------------------------------------------
file: src/cmd/vendor/golang.org/x/tools/go/analysis/passes/cgocall/cgocall.go
lout: 
# cmd/vendor/golang.org/x/tools/go/analysis/passes/composite
----------------------------------------------------
file: src/cmd/vendor/golang.org/x/tools/go/analysis/passes/composite/composite.go
lout: unkeyedLiteral (= MAPLIT), statictmp_2 (= NAME)
# cmd/vendor/golang.org/x/tools/go/analysis/passes/asmdecl
----------------------------------------------------
file: src/cmd/vendor/golang.org/x/tools/go/analysis/passes/asmdecl/asmdecl.go
lout: asmPlusBuild (= CALLFUNC), asmTEXT (= CALLFUNC), asmDATA (= CALLFUNC), asmSP (= CALLFUNC), asmUnnamedFP (= CALLFUNC), asmNamedFP (= CALLFUNC), asmOpcode (= CALLFUNC), ppc64Suff (= CALLFUNC)
# cmd/vendor/golang.org/x/tools/go/analysis/passes/copylock
----------------------------------------------------
file: src/cmd/vendor/golang.org/x/tools/go/analysis/passes/copylock/copylock.go
lout: statictmp_12 (= NAME)
# cmd/vendor/golang.org/x/tools/go/analysis/passes/httpresponse
----------------------------------------------------
file: src/cmd/vendor/golang.org/x/tools/go/analysis/passes/httpresponse/httpresponse.go
lout: statictmp_2 (= NAME)
# cmd/vendor/golang.org/x/tools/go/cfg
----------------------------------------------------
file: src/cmd/vendor/golang.org/x/tools/go/cfg/builder.go
lout: 
# cmd/vendor/golang.org/x/tools/go/analysis/passes/loopclosure
----------------------------------------------------
file: src/cmd/vendor/golang.org/x/tools/go/analysis/passes/loopclosure/loopclosure.go
lout: statictmp_3 (= NAME)
# cmd/vendor/golang.org/x/tools/go/analysis/passes/nilfunc
----------------------------------------------------
file: src/cmd/vendor/golang.org/x/tools/go/analysis/passes/nilfunc/nilfunc.go
lout: statictmp_2 (= NAME)
# cmd/vendor/golang.org/x/tools/go/analysis/passes/pkgfact
----------------------------------------------------
file: src/cmd/vendor/golang.org/x/tools/go/analysis/passes/pkgfact/pkgfact.go
lout: statictmp_1 (= new), statictmp_0 (= CALLFUNC)
# cmd/vendor/golang.org/x/tools/go/analysis/passes/shift
----------------------------------------------------
file: src/cmd/vendor/golang.org/x/tools/go/analysis/passes/shift/dead.go
lout: archSizes (= CALLFUNC), uintBitSize (= *), uintptrBitSize (= *), statictmp_5 (= NAME)
# cmd/vendor/golang.org/x/tools/go/analysis/passes/stdmethods
----------------------------------------------------
file: src/cmd/vendor/golang.org/x/tools/go/analysis/passes/stdmethods/stdmethods.go
lout: canonicalMethods (= MAPLIT), statictmp_3 (= NAME)
# cmd/vendor/golang.org/x/tools/go/analysis/passes/structtag
----------------------------------------------------
file: src/cmd/vendor/golang.org/x/tools/go/analysis/passes/structtag/structtag.go
lout: errTagSpace (= CALLFUNC), errTagKeySyntax (= CALLFUNC), errTagSyntax (= CALLFUNC), errTagValueSyntax (= CALLFUNC), checkTagSpaces (= MAPLIT), errTagValueSpace (= CALLFUNC), statictmp_3 (= NAME)
# cmd/vendor/golang.org/x/tools/go/analysis/passes/tests
----------------------------------------------------
file: src/cmd/vendor/golang.org/x/tools/go/analysis/passes/tests/tests.go
lout: 
# cmd/vendor/golang.org/x/tools/go/ast/astutil
----------------------------------------------------
file: src/cmd/vendor/golang.org/x/tools/go/ast/astutil/enclosing.go
lout: abort (= new)
# cmd/vendor/golang.org/x/tools/go/analysis/passes/unreachable
----------------------------------------------------
file: src/cmd/vendor/golang.org/x/tools/go/analysis/passes/unreachable/unreachable.go
lout: statictmp_3 (= NAME)
# cmd/vendor/golang.org/x/tools/go/analysis/passes/unsafeptr
----------------------------------------------------
file: src/cmd/vendor/golang.org/x/tools/go/analysis/passes/unsafeptr/unsafeptr.go
lout: statictmp_2 (= NAME)
# cmd/vendor/golang.org/x/tools/go/analysis/passes/unusedresult
----------------------------------------------------
file: src/cmd/vendor/golang.org/x/tools/go/analysis/passes/unusedresult/unusedresult.go
lout: sigNoArgsStringResult (= CALLFUNC), statictmp_2 (= NAME)
# cmd/vendor/golang.org/x/tools/go/types/typeutil
----------------------------------------------------
file: src/cmd/vendor/golang.org/x/tools/go/types/typeutil/callee.go
lout: 
# cmd/vendor/golang.org/x/tools/go/analysis/passes/ctrlflow
----------------------------------------------------
file: src/cmd/vendor/golang.org/x/tools/go/analysis/passes/ctrlflow/ctrlflow.go
lout: panicBuiltin (= DOTTYPE), statictmp_2 (= CALLFUNC), statictmp_3 (= new), statictmp_4 (= NAME)
# cmd/vendor/golang.org/x/tools/go/analysis/unitchecker
----------------------------------------------------
file: src/cmd/vendor/golang.org/x/tools/go/analysis/unitchecker/unitchecker.go
lout: 
# cmd/vendor/golang.org/x/tools/go/analysis/passes/lostcancel
----------------------------------------------------
file: src/cmd/vendor/golang.org/x/tools/go/analysis/passes/lostcancel/lostcancel.go
lout: statictmp_4 (= NAME), statictmp_4 (= NAME)
# cmd/vendor/golang.org/x/tools/go/analysis/passes/unmarshal
----------------------------------------------------
file: src/cmd/vendor/golang.org/x/tools/go/analysis/passes/unmarshal/unmarshal.go
lout: statictmp_2 (= NAME)
# cmd/vendor/golang.org/x/tools/go/analysis/passes/printf
----------------------------------------------------
file: src/cmd/vendor/golang.org/x/tools/go/analysis/passes/printf/printf.go
lout: isPrint (= MAPLIT), errorType (= DOTTYPE), printFormatRE (= CALLFUNC), statictmp_6 (= NAME), statictmp_7 (= new), archSizes (= CALLFUNC)
# cmd/vet
----------------------------------------------------
file: src/cmd/vet/doc.go
lout: 
# net/http
----------------------------------------------------
file: src/net/http/client.go
lout: ErrUseLastResponse (= CALLFUNC), cookieNameSanitizer (= CALLFUNC), errSeeker (= CALLFUNC), errNoOverlap (= CALLFUNC), unixEpochTime (= CALLFUNC), http2errReadEmpty (= CALLFUNC), http2errCodeName (= MAPLIT), http2errMixPseudoHeaderTypes (= CALLFUNC), http2errPseudoAfterRegular (= CALLFUNC), http2padZeros (= MAKESLICE), http2frameName (= MAPLIT), http2flagName (= MAPLIT), http2frameParsers (= MAPLIT), http2ErrFrameTooLarge (= CALLFUNC), http2errStreamID (= CALLFUNC), http2errDepStreamID (= CALLFUNC), http2errPadLength (= CALLFUNC), http2errPadBytes (= CALLFUNC), http2errCanceled (= NAME), http2DebugGoroutines (= ==), http2commonLowerHeader (= MAPLIT), http2commonCanonHeader (= MAPLIT), http2settingName (= MAPLIT), http2errInvalidHeaderFieldName (= CALLFUNC), http2errInvalidHeaderFieldValue (= CALLFUNC), http2httpCodeStringCommon (= MAPLIT), http2errClosedPipeWrite (= CALLFUNC), http2errClientDisconnected (= CALLFUNC), http2errClosedBody (= CALLFUNC), http2errHandlerComplete (= CALLFUNC), http2errStreamClosed (= CALLFUNC), http2settingsTimerMsg (= new), http2idleTimerMsg (= new), http2shutdownTimerMsg (= new), http2gracefulShutdownMsg (= new), http2errPrefaceTimeout (= CALLFUNC), http2errHandlerPanicked (= CALLFUNC), http2ErrRecursivePush (= CALLFUNC), http2ErrPushLimitReached (= CALLFUNC), http2errTransportVersion (= CALLFUNC), http2errClientConnClosed (= CALLFUNC), http2errClientConnUnusable (= CALLFUNC), http2errClientConnGotGoAway (= CALLFUNC), http2errRequestCanceled (= CALLFUNC), http2errStopReqBodyWrite (= CALLFUNC), http2errStopReqBodyWriteAndCancel (= CALLFUNC), http2errClosedResponseBody (= CALLFUNC), http2errInvalidTrailers (= CALLFUNC), http2errResponseHeaderListSize (= CALLFUNC), http2errRequestHeaderListSize (= CALLFUNC), http2errPseudoTrailers (= CALLFUNC), http2noBody (= CALLFUNC), headerNewlineToSpace (= CALLFUNC), aLongTimeAgo (= CALLFUNC), ErrMissingFile (= CALLFUNC), reqWriteExcludeHeader (= MAPLIT), ErrNoCookie (= CALLFUNC), statictmp_246 (= MAKEMAP), statictmp_246 (= MAKEMAP), errMissingHost (= CALLFUNC), respExcludeHeader (= MAPLIT), ErrNoLocation (= CALLFUNC), ErrBodyNotAllowed (= CALLFUNC), ErrHijacked (= CALLFUNC), ErrContentLength (= CALLFUNC), ErrWriteAfterFlush (= CALLFUNC), errTooLarge (= CALLFUNC), ErrAbortHandler (= CALLFUNC), htmlReplacer (= CALLFUNC), stateName (= MAPLIT), ErrServerClosed (= CALLFUNC), ErrHandlerTimeout (= CALLFUNC), uniqNameNext (= MAKEMAP), socksaLongTimeAgo (= CALLFUNC), statusText (= MAPLIT), ErrLineTooLong (= NAME), ErrBodyReadAfterClose (= CALLFUNC), errTrailerEOF (= CALLFUNC), nopCloserType (= CALLFUNC), statictmp_303 (= CALLPART), connsPerHostClosedCh (= MAKECHAN), ErrSkipAltProtocol (= CALLFUNC), errKeepAlivesDisabled (= CALLFUNC), errConnBroken (= CALLFUNC), errWantIdle (= CALLFUNC), errTooManyIdle (= CALLFUNC), errTooManyIdleHost (= CALLFUNC), errCloseIdleConns (= CALLFUNC), errReadLoopExiting (= CALLFUNC), errIdleConnTimeout (= CALLFUNC), errNotCachingH2Conn (= CALLFUNC), errServerClosedIdle (= CALLFUNC), errCallerOwnsConn (= CALLFUNC), errRequestCanceled (= CALLFUNC), errRequestCanceledConn (= CALLFUNC), portMap (= MAPLIT), errReadOnClosedResBody (= CALLFUNC)
# expvar
----------------------------------------------------
file: src/expvar/expvar.go
lout: 
# net/http/cookiejar
----------------------------------------------------
file: src/net/http/cookiejar/jar.go
lout: errIllegalDomain (= CALLFUNC), errMalformedDomain (= CALLFUNC), errNoHostname (= CALLFUNC), endOfTime (= CALLFUNC)
# net/http/cgi
----------------------------------------------------
file: src/net/http/cgi/child.go
lout: trailingPort (= CALLFUNC), osDefaultInheritEnv (= MAPLIT)
# net/http/pprof
----------------------------------------------------
file: src/net/http/pprof/pprof.go
lout: profileDescriptions (= MAPLIT), indexTmpl (= CALLFUNC)
# net/http/httptest
----------------------------------------------------
file: src/net/http/httptest/httptest.go
lout: serve (= CALLFUNC)
# cmd/go/internal/web
----------------------------------------------------
file: src/cmd/go/internal/web/http.go
lout: httpClient (= NAME)
# net/http/fcgi
----------------------------------------------------
file: src/net/http/fcgi/child.go
lout: errCloseConn (= CALLFUNC), emptyBody (= CALLFUNC), ErrRequestAborted (= CALLFUNC), ErrConnClosed (= CALLFUNC)
# cmd/go/internal/web2
----------------------------------------------------
file: src/cmd/go/internal/web2/web.go
lout: httpDo (= CALLPART)
# net/http/httputil
----------------------------------------------------
file: src/net/http/httputil/dump.go
lout: reqWriteExcludeHeaderDump (= MAPLIT), errNoBody (= CALLFUNC), emptyBody (= CALLFUNC), ErrLineTooLong (= NAME), errClosed (= CALLFUNC)
# cmd/vendor/github.com/google/pprof/internal/plugin
----------------------------------------------------
file: src/cmd/vendor/github.com/google/pprof/internal/plugin/plugin.go
lout: 
# net/rpc
----------------------------------------------------
file: src/net/rpc/client.go
lout: ErrShutdown (= CALLFUNC), debug (= CALLFUNC), typeOfError (= CALLINTER), DefaultServer (= CALLFUNC)
# cmd/go/internal/webtest
----------------------------------------------------
file: src/cmd/go/internal/webtest/test.go
lout: mode (= CALLFUNC)
# net/rpc/jsonrpc
----------------------------------------------------
file: src/net/rpc/jsonrpc/client.go
lout: errMissingParams (= CALLFUNC)
# cmd/vendor/github.com/google/pprof/internal/symbolz
----------------------------------------------------
file: src/cmd/vendor/github.com/google/pprof/internal/symbolz/symbolz.go
lout: symbolzRE (= CALLFUNC)
# cmd/vendor/github.com/google/pprof/internal/transport
----------------------------------------------------
file: src/cmd/vendor/github.com/google/pprof/internal/transport/transport.go
lout: 
# cmd/go/internal/get
----------------------------------------------------
file: src/cmd/go/internal/get/discovery.go
lout: statictmp_6 (= +), getD (= CALLMETH), getF (= CALLMETH), getT (= CALLMETH), getU (= CALLMETH), getFix (= CALLMETH), downloadCache (= MAPLIT), downloadRootCache (= MAPLIT), defaultSecureScheme (= MAPLIT), scpSyntaxRe (= CALLFUNC), statictmp_34 (= +), httpPrefixRE (= CALLFUNC), errUnknownSite (= CALLFUNC), fetchCache (= MAPLIT)
# cmd/vendor/github.com/google/pprof/internal/binutils
----------------------------------------------------
file: src/cmd/vendor/github.com/google/pprof/internal/binutils/addr2liner.go
lout: nmOutputRE (= CALLFUNC), objdumpAsmOutputRE (= CALLFUNC), objdumpOutputFileLine (= CALLFUNC), objdumpOutputFunction (= CALLFUNC)
# cmd/vendor/github.com/google/pprof/internal/symbolizer
----------------------------------------------------
file: src/cmd/vendor/github.com/google/pprof/internal/symbolizer/symbolizer.go
lout: 
# cmd/vendor/github.com/google/pprof/internal/report
----------------------------------------------------
file: src/cmd/vendor/github.com/google/pprof/internal/report/report.go
lout: 
# cmd/go/internal/modfetch
----------------------------------------------------
file: src/cmd/go/internal/modfetch/cache.go
lout: errNotCached (= CALLFUNC), proxyURL (= CALLFUNC), pseudoVersionRE (= CALLFUNC)
# cmd/go/internal/modconv
----------------------------------------------------
file: src/cmd/go/internal/modconv/convert.go
lout: Converters (= MAPLIT)
# cmd/trace
----------------------------------------------------
file: src/cmd/trace/annotations.go
lout: logDiv (= CALLFUNC), templUserRegionTypes (= CALLFUNC), templUserTaskTypes (= CALLFUNC), templUserTaskType (= CALLFUNC), templUserRegionType (= CALLFUNC), templGoroutines (= CALLFUNC), templGoroutine (= CALLFUNC), httpFlag (= CALLFUNC), pprofFlag (= CALLFUNC), debugFlag (= CALLFUNC), templMain (= CALLFUNC), utilFlagNames (= MAPLIT)
# cmd/go/internal/modload
----------------------------------------------------
file: src/cmd/go/internal/modload/build.go
lout: nil n.Left on infoStart, _ = hex.DecodeString("3077af0c9274080241e1c107e6d618e6"), nil n.Left on infoEnd, _ = hex.DecodeString("f932433186182072008242104116d8f2"), MustUseModules (= CALLFUNC), gitOriginRE (= CALLFUNC), importCommentRE (= CALLFUNC), anyTags (= MAPLIT), errMissing (= CALLFUNC), ErrRequire (= CALLFUNC)
# cmd/vendor/github.com/google/pprof/internal/driver
----------------------------------------------------
file: src/cmd/vendor/github.com/google/pprof/internal/driver/cli.go
lout: viewBox (= CALLFUNC), graphID (= CALLFUNC), svgClose (= CALLFUNC), pprofCommands (= MAPLIT), pprofVariables (= MAPLIT), tagFilterRangeRx (= CALLFUNC), tailDigitsRE (= CALLFUNC), pprofShortcuts (= MAPLIT)
# cmd/go/internal/clean
----------------------------------------------------
file: src/cmd/go/internal/clean/clean.go
lout: cleaned (= MAPLIT), cleanDir (= MAPLIT), cleanFile (= MAPLIT), cleanExt (= MAPLIT)
# cmd/go/internal/fix
----------------------------------------------------
file: src/cmd/go/internal/fix/fix.go
lout: 
# cmd/go/internal/envcmd
----------------------------------------------------
file: src/cmd/go/internal/envcmd/env.go
lout: envJson (= CALLMETH)
# cmd/go/internal/fmtcmd
----------------------------------------------------
file: src/cmd/go/internal/fmtcmd/fmt.go
lout: 
# cmd/go/internal/bug
----------------------------------------------------
file: src/cmd/go/internal/bug/bug.go
lout: 
# cmd/go/internal/generate
----------------------------------------------------
file: src/cmd/go/internal/generate/generate.go
lout: stop (= CALLFUNC)
# cmd/go/internal/list
----------------------------------------------------
file: src/cmd/go/internal/list/context.go
lout: listCompiled (= CALLMETH), listDeps (= CALLMETH), listE (= CALLMETH), listExport (= CALLMETH), listFmt (= CALLMETH), listFind (= CALLMETH), listJson (= CALLMETH), listM (= CALLMETH), listU (= CALLMETH), listTest (= CALLMETH), listVersions (= CALLMETH)
# cmd/go/internal/modget
----------------------------------------------------
file: src/cmd/go/internal/modget/get.go
lout: statictmp_1 (= +), getD (= CALLMETH), getF (= CALLMETH), getFix (= CALLMETH), getM (= CALLMETH), getT (= CALLMETH)
# cmd/go/internal/modcmd
----------------------------------------------------
file: src/cmd/go/internal/modcmd/download.go
lout: downloadJSON (= CALLMETH), editFmt (= CALLMETH), editGo (= CALLMETH), editJSON (= CALLMETH), editPrint (= CALLMETH), editModule (= CALLMETH), copiedMetadata (= MAKEMAP), whyM (= CALLMETH), whyVendor (= CALLMETH)
# cmd/go/internal/vet
----------------------------------------------------
file: src/cmd/go/internal/vet/vet.go
lout: 
# cmd/vendor/github.com/google/pprof/driver
----------------------------------------------------
file: src/cmd/vendor/github.com/google/pprof/driver/driver.go
lout: 
# cmd/go/internal/test
----------------------------------------------------
file: src/cmd/go/internal/test/cover.go
lout: errBadTestInputs (= CALLFUNC), errFileTooNew (= CALLFUNC), statictmp_23 (= new), statictmp_31 (= new), statictmp_40 (= new)
# cmd/pprof
----------------------------------------------------
file: src/cmd/pprof/doc.go
lout: 
# cmd/go
----------------------------------------------------
file: src/cmd/go/alldocs.go
lout: 
---
Installed Go for darwin/amd64 in /Users/whit537/workbench/go/src/github.com/golang/go
Installed commands in /Users/whit537/workbench/go/src/github.com/golang/go/bin
